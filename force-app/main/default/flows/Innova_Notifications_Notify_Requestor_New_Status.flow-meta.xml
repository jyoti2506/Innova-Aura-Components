<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>In_App_Notification_Contact</name>
        <label>In App Notification - Contact</label>
        <locationX>419</locationX>
        <locationY>655</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <connector>
            <targetReference>Get_Org_Wide_Email_Address</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>$Label.Innova_Custom_Notification_TypeId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>InAppRecipients</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <stringValue>New {!Case.RecordType.DeveloperName} has been created.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <stringValue>New {!Case.RecordType.DeveloperName} {!Case.CaseNumber} has been created.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>Case.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>customNotificationAction</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Send_Email_to_Contact</name>
        <label>Send Email to Contact</label>
        <locationX>866</locationX>
        <locationY>828</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>senderType</name>
            <value>
                <stringValue>OrgWideEmailAddress</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>senderAddress</name>
            <value>
                <elementReference>varOrgWideEmailAddress</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>relatedRecordId</name>
            <value>
                <elementReference>Case.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientId</name>
            <value>
                <elementReference>Case.ContactId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailTemplateId</name>
            <value>
                <elementReference>varEmailTemplateId</elementReference>
            </value>
        </inputParameters>
        <nameSegment>emailSimple</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Send_Email_to_Contact_0</name>
        <label>Send Email to Contact</label>
        <locationX>1263</locationX>
        <locationY>826</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <connector>
            <targetReference>Get_Requestor_Contact</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>senderType</name>
            <value>
                <stringValue>OrgWideEmailAddress</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>senderAddress</name>
            <value>
                <elementReference>varOrgWideEmailAddress</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>relatedRecordId</name>
            <value>
                <elementReference>Case.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientId</name>
            <value>
                <elementReference>Case.ContactId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailTemplateId</name>
            <value>
                <elementReference>varEmailTemplateId</elementReference>
            </value>
        </inputParameters>
        <nameSegment>emailSimple</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Send_Email_to_Requestor</name>
        <label>Send Email to Requestor</label>
        <locationX>1728</locationX>
        <locationY>823</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>senderType</name>
            <value>
                <stringValue>OrgWideEmailAddress</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>senderAddress</name>
            <value>
                <elementReference>varOrgWideEmailAddress</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>relatedRecordId</name>
            <value>
                <elementReference>Case.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientId</name>
            <value>
                <elementReference>Get_Requestor_Contact.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailTemplateId</name>
            <value>
                <elementReference>varEmailTemplateId</elementReference>
            </value>
        </inputParameters>
        <nameSegment>emailSimple</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <apiVersion>57.0</apiVersion>
    <assignments>
        <name>Set_Email_Template_Id</name>
        <label>Set Email Template Id</label>
        <locationX>1077</locationX>
        <locationY>661</locationY>
        <assignmentItems>
            <assignToReference>varEmailTemplateId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Email_Template.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>On_Behalf_0</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_InApp_Recipient_Contact_User</name>
        <label>Set InApp Recipient - Contact User</label>
        <locationX>278</locationX>
        <locationY>656</locationY>
        <assignmentItems>
            <assignToReference>InAppRecipients</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Get_Contact_User_Record.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>In_App_Notification_Contact</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_InApp_Recipient_CreatedBy</name>
        <label>Set InApp Recipient - CreatedBy</label>
        <locationX>591</locationX>
        <locationY>483</locationY>
        <assignmentItems>
            <assignToReference>InAppRecipients</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Case.CreatedById</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Found_Contact_User</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Found_Contact_User</name>
        <label>Found Contact&apos;s User</label>
        <locationX>361</locationX>
        <locationY>411</locationY>
        <defaultConnectorLabel>No User</defaultConnectorLabel>
        <rules>
            <name>Yes_Found_User</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Contact_User_Record.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_InApp_Recipient_Contact_User</targetReference>
            </connector>
            <label>Yes - Found User</label>
        </rules>
    </decisions>
    <decisions>
        <name>Found_Email_Template</name>
        <label>Found Email Template</label>
        <locationX>829</locationX>
        <locationY>656</locationY>
        <defaultConnectorLabel>No - Did Not Find Template</defaultConnectorLabel>
        <rules>
            <name>Yes_Found_Template</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Email_Template.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Email_Template_Id</targetReference>
            </connector>
            <label>Yes - Found Template</label>
        </rules>
    </decisions>
    <decisions>
        <name>Found_Requestor_Contact</name>
        <label>Found Requestor&apos;s Contact</label>
        <locationX>1520</locationX>
        <locationY>826</locationY>
        <defaultConnectorLabel>No Contact</defaultConnectorLabel>
        <rules>
            <name>Yes_Found_Contact</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Requestor_Contact.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Send_Email_to_Requestor</targetReference>
            </connector>
            <label>Yes - Found Contact</label>
        </rules>
    </decisions>
    <decisions>
        <description>On Behalf Of field populated means the Case was created in the Portal.
If the Created By Email and Contact Email are different, then both need to be notified.</description>
        <name>On_Behalf</name>
        <label>On Behalf</label>
        <locationX>580</locationX>
        <locationY>323</locationY>
        <defaultConnector>
            <targetReference>Found_Contact_User</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>One End User</defaultConnectorLabel>
        <rules>
            <name>Two_End_Users</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Case.ContactId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Case.Innova_On_Behalf_Of__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Case.CreatedBy.Email</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>Case.Contact.Email</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_InApp_Recipient_CreatedBy</targetReference>
            </connector>
            <label>Two End Users</label>
        </rules>
    </decisions>
    <decisions>
        <description>On Behalf Of field populated means the Case was created in the Portal.
If the Created By Email and Contact Email are different, then both need to be notified.</description>
        <name>On_Behalf_0</name>
        <label>On Behalf</label>
        <locationX>1070</locationX>
        <locationY>829</locationY>
        <defaultConnector>
            <targetReference>Send_Email_to_Contact</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>One End User</defaultConnectorLabel>
        <rules>
            <name>Two_End_Users_0</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Case.ContactId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Case.Innova_On_Behalf_Of__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Case.CreatedBy.Email</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>Case.Contact.Email</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Send_Email_to_Contact_0</targetReference>
            </connector>
            <label>Two End Users</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <interviewLabel>Innova - Notifications - Notify Requestor - New Status {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Innova - Notifications - Notify End Users - New Status</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Contact_User_Record</name>
        <label>Get Contact&apos;s User Record</label>
        <locationX>584</locationX>
        <locationY>181</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>On_Behalf</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Email</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Case.Contact.Email</elementReference>
            </value>
        </filters>
        <filters>
            <field>IsActive</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Currently using same template for Contact and Requestor</description>
        <name>Get_Email_Template</name>
        <label>Get Email Template</label>
        <locationX>701</locationX>
        <locationY>654</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Found_Email_Template</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>varEmailTemplateName_Contact</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>EmailTemplate</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Requestor_Contact</name>
        <label>Get Requestor&apos;s Contact</label>
        <locationX>1383</locationX>
        <locationY>825</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Found_Requestor_Contact</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Email</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Case.CreatedBy.Email</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Contact</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>458</locationX>
        <locationY>48</locationY>
        <connector>
            <targetReference>Get_Contact_User_Record</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <subflows>
        <name>Get_Org_Wide_Email_Address</name>
        <label>Get Org Wide Email Address</label>
        <locationX>563</locationX>
        <locationY>654</locationY>
        <connector>
            <targetReference>Get_Email_Template</targetReference>
        </connector>
        <flowName>Innova_Get_Org_Wide_Email_Address</flowName>
        <inputAssignments>
            <name>Case</name>
            <value>
                <elementReference>Case</elementReference>
            </value>
        </inputAssignments>
        <outputAssignments>
            <assignToReference>varOrgWideEmailAddress</assignToReference>
            <name>OrgWideEmailAddress</name>
        </outputAssignments>
    </subflows>
    <variables>
        <name>Case</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <objectType>Case</objectType>
    </variables>
    <variables>
        <name>InAppRecipients</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varEmailTemplateId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varEmailTemplateName_Contact</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>Innova Case is Created Email Template_End_User</stringValue>
        </value>
    </variables>
    <variables>
        <name>varOrgWideEmailAddress</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
