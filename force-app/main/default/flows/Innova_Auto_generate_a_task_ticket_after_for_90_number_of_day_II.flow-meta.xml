<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Send_notification</name>
        <label>Send notification</label>
        <locationX>182</locationX>
        <locationY>708</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <connector>
            <targetReference>Get_Related_Task_For_Owner</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>$Label.Innova_Custom_Notification_TypeId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>Ownerids</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <stringValue>Reminder for 90 days overdue.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <stringValue>The {!$Record.CaseNumber} ticket has been overdue.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>customNotificationAction</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Send_notification1</name>
        <label>Send notification</label>
        <locationX>710</locationX>
        <locationY>924</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <connector>
            <targetReference>Get_Related_Task_For_Owner1</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>$Label.Innova_Custom_Notification_TypeId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>QueueIds</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <stringValue>Reminder for 90 days overdue.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <stringValue>The {!$Record.CaseNumber} ticket has been overdue.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>customNotificationAction</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <apiVersion>58.0</apiVersion>
    <assignments>
        <name>Assign_to_OwnerIds</name>
        <label>Assign to OwnerIds</label>
        <locationX>182</locationX>
        <locationY>600</locationY>
        <assignmentItems>
            <assignToReference>Ownerids</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>$Record.Owner:User.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Send_notification</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_to_OwnerIds1</name>
        <label>Assign to OwnerIds</label>
        <locationX>710</locationX>
        <locationY>816</locationY>
        <assignmentItems>
            <assignToReference>QueueIds</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>$Record.Owner:Group.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Send_notification1</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Check_Id</name>
        <label>Check Id</label>
        <locationX>908</locationX>
        <locationY>708</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>if_yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Queue_member_Id.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_to_OwnerIds1</targetReference>
            </connector>
            <label>if yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_owner</name>
        <label>Check owner</label>
        <locationX>776</locationX>
        <locationY>492</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Check_User</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Owner:User.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_to_OwnerIds</targetReference>
            </connector>
            <label>Check User</label>
        </rules>
        <rules>
            <name>Check_Queue</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Owner:Group.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Queue_member_Id</targetReference>
            </connector>
            <label>Check Queue</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_record_type</name>
        <label>Check record type</label>
        <locationX>1205</locationX>
        <locationY>384</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>ifyes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Request</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Innova_Service_Request_Details__c</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>Email forwarding</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Flow.CurrentDateTime</leftValueReference>
                <operator>GreaterThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>Count</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check_owner</targetReference>
            </connector>
            <label>if yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Decision_For_Check_Related_Case_Id</name>
        <label>Decision For Check Related Case Id</label>
        <locationX>182</locationX>
        <locationY>924</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Check_Related_Case_Id</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Related_Task_For_Owner.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Create_a_Itsc_task_for_user</targetReference>
            </connector>
            <label>Check Related Case Id</label>
        </rules>
    </decisions>
    <decisions>
        <name>Decision_For_Check_Related_Case_Id1</name>
        <label>Decision For Check Related Case Id</label>
        <locationX>710</locationX>
        <locationY>1140</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Check_Related_Case_Id1</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Related_Task_For_Owner1.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Create_a_Itsc_task_for_user1</targetReference>
            </connector>
            <label>Check Related Case Id</label>
        </rules>
    </decisions>
    <description>Check in Record triggered Flow</description>
    <environments>Default</environments>
    <formulas>
        <name>Count</name>
        <dataType>DateTime</dataType>
        <expression>{!$Record.CreatedDate}+90</expression>
    </formulas>
    <interviewLabel>Innova-Auto generate a task/ticket after for 90 number of day II {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Innova-Auto generate a task/ticket after for 90 number of day II</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>Create_a_Itsc_task_for_user</name>
        <label>Create a Itsc task for user</label>
        <locationX>50</locationX>
        <locationY>1032</locationY>
        <inputAssignments>
            <field>Innova_Description__c</field>
            <value>
                <stringValue>Remove O365 License and move user to Disabled Users OU in AD</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Innova_Related_Case__c</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Innova_Subject__c</field>
            <value>
                <stringValue>Remove O365 License and move user to Disabled Users OU in AD</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>$Label.US_Service_Desk_L1</elementReference>
            </value>
        </inputAssignments>
        <object>Innova_ITSC_Task__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Create_a_Itsc_task_for_user1</name>
        <label>Create a Itsc task for user</label>
        <locationX>578</locationX>
        <locationY>1248</locationY>
        <inputAssignments>
            <field>Innova_Description__c</field>
            <value>
                <stringValue>Remove O365 License and move user to Disabled Users OU in AD</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Innova_Related_Case__c</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Innova_Subject__c</field>
            <value>
                <stringValue>Remove O365 License and move user to Disabled Users OU in AD</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>$Label.US_Service_Desk_L1</elementReference>
            </value>
        </inputAssignments>
        <object>Innova_ITSC_Task__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <name>Get_Queue_member_Id</name>
        <label>Get Queue member Id</label>
        <locationX>908</locationX>
        <locationY>600</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_Id</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>GroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Owner:Group.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>GroupMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Related_Task_For_Owner</name>
        <label>Get Related Task For Owner</label>
        <locationX>182</locationX>
        <locationY>816</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Decision_For_Check_Related_Case_Id</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Innova_Related_Case__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Innova_Subject__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Remove O365 License and move user to Disabled Users OU in AD</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Innova_ITSC_Task__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Related_Task_For_Owner1</name>
        <label>Get Related Task For Owner</label>
        <locationX>710</locationX>
        <locationY>1032</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Decision_For_Check_Related_Case_Id1</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Innova_Related_Case__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Innova_Subject__c</field>
            <operator>Contains</operator>
            <value>
                <stringValue>Remove O365 License and move user to Disabled Users OU in AD</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Innova_ITSC_Task__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Update_Toggle_checkbox</name>
        <label>Update Toggle checkbox</label>
        <locationX>1205</locationX>
        <locationY>276</locationY>
        <connector>
            <targetReference>Check_record_type</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Toggle__c</field>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <start>
        <locationX>369</locationX>
        <locationY>0</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Innova_Service_Request_Trigger__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Termination Request</stringValue>
            </value>
        </filters>
        <object>Case</object>
        <recordTriggerType>Create</recordTriggerType>
        <scheduledPaths>
            <name>Check_Record</name>
            <connector>
                <targetReference>Update_Toggle_checkbox</targetReference>
            </connector>
            <label>Check Record</label>
            <offsetNumber>90</offsetNumber>
            <offsetUnit>Days</offsetUnit>
            <recordField>CreatedDate</recordField>
            <timeSource>RecordField</timeSource>
        </scheduledPaths>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Obsolete</status>
    <variables>
        <name>Ownerids</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>QueueIds</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
