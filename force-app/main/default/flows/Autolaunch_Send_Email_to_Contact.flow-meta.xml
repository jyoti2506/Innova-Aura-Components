<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <description>Use Email Template to send notification to contact</description>
        <name>Send_Email_to_Both_Contact</name>
        <label>Send Email to Both (Contact)</label>
        <locationX>138</locationX>
        <locationY>1514</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <connector>
            <targetReference>Check_if_OnBehalf_is_Bounced</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>senderType</name>
            <value>
                <stringValue>OrgWideEmailAddress</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>senderAddress</name>
            <value>
                <elementReference>varSenderEmailAddress</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>relatedRecordId</name>
            <value>
                <elementReference>varRelatedRecordId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientId</name>
            <value>
                <elementReference>Case.ContactId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailTemplateId</name>
            <value>
                <elementReference>varEmailTemplateId</elementReference>
            </value>
        </inputParameters>
        <nameSegment>emailSimple</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <description>Use Email Template to send notification to On Behalf</description>
        <name>Send_Email_to_Both_On_Behalf</name>
        <label>Send Email to Both (On Behalf)</label>
        <locationX>138</locationX>
        <locationY>1814</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>senderType</name>
            <value>
                <stringValue>OrgWideEmailAddress</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>senderAddress</name>
            <value>
                <elementReference>varSenderEmailAddress</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>relatedRecordId</name>
            <value>
                <elementReference>varRelatedRecordId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientId</name>
            <value>
                <elementReference>Case.Innova_On_Behalf_Of__c</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailTemplateId</name>
            <value>
                <elementReference>varEmailTemplateId</elementReference>
            </value>
        </inputParameters>
        <nameSegment>emailSimple</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <description>Use Email Template to send notification to contact</description>
        <name>Send_Email_to_Contact_Only</name>
        <label>Send Email to Contact Only</label>
        <locationX>578</locationX>
        <locationY>1514</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>senderType</name>
            <value>
                <stringValue>OrgWideEmailAddress</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>senderAddress</name>
            <value>
                <elementReference>varSenderEmailAddress</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>relatedRecordId</name>
            <value>
                <elementReference>varRelatedRecordId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientId</name>
            <value>
                <elementReference>Case.ContactId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailTemplateId</name>
            <value>
                <elementReference>varEmailTemplateId</elementReference>
            </value>
        </inputParameters>
        <nameSegment>emailSimple</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Send_In_App_Notification</name>
        <label>Send In App Notification</label>
        <locationX>776</locationX>
        <locationY>866</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <connector>
            <targetReference>Get_Email_Template</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>$Label.Innova_Custom_Notification_TypeId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>InAppRecipient</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <stringValue>{!Case.RecordType.DeveloperName} has been resolved.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <stringValue>{!Case.RecordType.DeveloperName} {!Case.CaseNumber} has been resolved.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>Case.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>customNotificationAction</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <apiVersion>57.0</apiVersion>
    <assignments>
        <name>Set_Email_Template_Id</name>
        <label>Set Email Template Id</label>
        <locationX>446</locationX>
        <locationY>1190</locationY>
        <assignmentItems>
            <assignToReference>varEmailTemplateId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Email_Template.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Submitted_For_Another_Person_2</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_In_App_Recipient_Both</name>
        <label>Set In App Recipient - Both</label>
        <locationX>644</locationX>
        <locationY>566</locationY>
        <assignmentItems>
            <assignToReference>InAppRecipient</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Case.CreatedById</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>InAppRecipient</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Get_UserId_from_Contact_Email.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Set_On_Behalf</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_In_App_Recipient_Requestor</name>
        <label>Set In App Recipient - Requestor</label>
        <locationX>908</locationX>
        <locationY>566</locationY>
        <assignmentItems>
            <assignToReference>InAppRecipient</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Case.CreatedById</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Send_In_App_Notification</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_On_Behalf</name>
        <label>Set On Behalf - TRUE</label>
        <locationX>644</locationX>
        <locationY>674</locationY>
        <assignmentItems>
            <assignToReference>isOnBehalf</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Send_In_App_Notification</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Related_Record_Id</name>
        <label>Set Related Record Id</label>
        <locationX>776</locationX>
        <locationY>134</locationY>
        <assignmentItems>
            <assignToReference>varRelatedRecordId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Case.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Get_Org_Wide_Email_Address</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Check_if_Contact_is_Bounced</name>
        <label>Check if Contact is Bounced</label>
        <locationX>490</locationX>
        <locationY>1406</locationY>
        <defaultConnector>
            <targetReference>Send_Email_to_Contact_Only</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Not Bounced</defaultConnectorLabel>
        <rules>
            <name>Bounced</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Case.Contact.EmailBouncedReason</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <label>Bounced</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_if_OnBehalf_is_Bounced</name>
        <label>Check if OnBehalf is Bounced</label>
        <locationX>50</locationX>
        <locationY>1706</locationY>
        <defaultConnector>
            <targetReference>Send_Email_to_Both_On_Behalf</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Not Bounced</defaultConnectorLabel>
        <rules>
            <name>Bounced_On_Behalf</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Case.Innova_On_Behalf_Of__r.EmailBouncedReason</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <label>Bounced On Behalf</label>
        </rules>
    </decisions>
    <decisions>
        <name>Copy_1_of_Check_if_Contact_is_Bounced</name>
        <label>Copy 1 of Check if Contact is Bounced</label>
        <locationX>50</locationX>
        <locationY>1406</locationY>
        <defaultConnector>
            <targetReference>Send_Email_to_Both_Contact</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Not Bounced</defaultConnectorLabel>
        <rules>
            <name>Copy_1_of_Bounced</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Case.Contact.EmailBouncedReason</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check_if_OnBehalf_is_Bounced</targetReference>
            </connector>
            <label>Copy 1 of Bounced</label>
        </rules>
    </decisions>
    <decisions>
        <name>Found_Email_Template</name>
        <label>Found Email Template</label>
        <locationX>776</locationX>
        <locationY>1082</locationY>
        <defaultConnectorLabel>No - Did Not Find Template</defaultConnectorLabel>
        <rules>
            <name>Yes_Found_Template</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Email_Template.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Email_Template_Id</targetReference>
            </connector>
            <label>Yes - Found Template</label>
        </rules>
    </decisions>
    <decisions>
        <name>Submitted_for_Another_Person</name>
        <label>Submitted for Another Person</label>
        <locationX>776</locationX>
        <locationY>458</locationY>
        <defaultConnector>
            <targetReference>Set_In_App_Recipient_Requestor</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No - Self</defaultConnectorLabel>
        <rules>
            <name>Yes_On_Behalf_Of</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Case.Innova_On_Behalf_Of__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Case.Innova_On_Behalf_Of__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>Case.ContactId</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_In_App_Recipient_Both</targetReference>
            </connector>
            <label>Yes - On Behalf Of</label>
        </rules>
    </decisions>
    <decisions>
        <name>Submitted_For_Another_Person_2</name>
        <label>Submitted For Another Person 2</label>
        <locationX>446</locationX>
        <locationY>1298</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes_Another_Person</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>isOnBehalf</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Case.Contact.Email</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Case.Innova_On_Behalf_Of__r.Email</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Copy_1_of_Check_if_Contact_is_Bounced</targetReference>
            </connector>
            <label>Yes - Another Person</label>
        </rules>
        <rules>
            <name>No_Another_Person</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>isOnBehalf</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Case.Contact.Email</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check_if_Contact_is_Bounced</targetReference>
            </connector>
            <label>No - Another Person</label>
        </rules>
    </decisions>
    <description>Update isOnBehalf Decision</description>
    <environments>Default</environments>
    <formulas>
        <description>Set Email Template</description>
        <name>varEmailTemplateName</name>
        <dataType>String</dataType>
        <expression>if({!isOnBehalf},{!EmailTemplateName_OnBehalf},{!EmailTemplateName_Requestor})</expression>
    </formulas>
    <interviewLabel>Send Email to Contact {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Innova - Notifications - Resolution</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Email_Template</name>
        <label>Get Email Template</label>
        <locationX>776</locationX>
        <locationY>974</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Found_Email_Template</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>varEmailTemplateName</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>EmailTemplate</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_UserId_from_Contact_Email</name>
        <label>Get UserId from Contact Email</label>
        <locationX>776</locationX>
        <locationY>350</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Submitted_for_Another_Person</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Email</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Case.Innova_On_Behalf_Of__r.Email</elementReference>
            </value>
        </filters>
        <filters>
            <field>IsActive</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>LastName</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Platform Integration User</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <runInMode>SystemModeWithoutSharing</runInMode>
    <start>
        <locationX>650</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Set_Related_Record_Id</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <subflows>
        <description>Get Org Wide Email Address from Current Queue</description>
        <name>Get_Org_Wide_Email_Address</name>
        <label>Get Org Wide Email Address</label>
        <locationX>776</locationX>
        <locationY>242</locationY>
        <connector>
            <targetReference>Get_UserId_from_Contact_Email</targetReference>
        </connector>
        <flowName>Innova_Get_Org_Wide_Email_Address</flowName>
        <inputAssignments>
            <name>Case</name>
            <value>
                <elementReference>Case</elementReference>
            </value>
        </inputAssignments>
        <outputAssignments>
            <assignToReference>varSenderEmailAddress</assignToReference>
            <name>OrgWideEmailAddress</name>
        </outputAssignments>
    </subflows>
    <variables>
        <name>Case</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <objectType>Case</objectType>
    </variables>
    <variables>
        <name>EmailTemplateName_OnBehalf</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>Innova - Email to OnBehalf - Case is Resolved</stringValue>
        </value>
    </variables>
    <variables>
        <name>EmailTemplateName_Requestor</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>Innova - Email to Requestor - Case is Resolved</stringValue>
        </value>
    </variables>
    <variables>
        <name>InAppRecipient</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>isOnBehalf</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <name>varEmailTemplateId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Email Recipient</description>
        <name>varRecipientId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varRelatedRecordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varSenderEmailAddress</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
