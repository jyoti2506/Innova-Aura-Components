<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Email_Contact</name>
        <label>Email Contact</label>
        <locationX>1460</locationX>
        <locationY>4322</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <connector>
            <targetReference>Error_Jump_Point</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Error_Jump_Point</targetReference>
        </faultConnector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>senderType</name>
            <value>
                <stringValue>OrgWideEmailAddress</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>senderAddress</name>
            <value>
                <elementReference>varOrgWideEmailAddress</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>relatedRecordId</name>
            <value>
                <elementReference>Case.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientId</name>
            <value>
                <elementReference>Process_Get_Contacts.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailTemplateId</name>
            <value>
                <elementReference>Get_Email_Template.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>emailSimple</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>In_App_Notification_Queue</name>
        <label>In App Notification Queue</label>
        <locationX>1117</locationX>
        <locationY>3134</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <connector>
            <targetReference>Get_Email_Template</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Get_Email_Template</targetReference>
        </faultConnector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>$Label.Innova_Custom_Notification_TypeId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>colNotificationUsers</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <elementReference>varNotificationTitle</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <elementReference>varNotificationBody</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>Case.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>customNotificationAction</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <apiVersion>57.0</apiVersion>
    <assignments>
        <name>Add_Contact_to_colUserEmails</name>
        <label>Add Contact to colUserEmails</label>
        <locationX>1062</locationX>
        <locationY>758</locationY>
        <assignmentItems>
            <assignToReference>colUserEmails</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Case.Contact.Email</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Check_if_Groups_to_Parse</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Add_Created_By_Contact_to_colUser</name>
        <label>Add Created By Contact to colUserEmails</label>
        <locationX>930</locationX>
        <locationY>566</locationY>
        <assignmentItems>
            <assignToReference>colUserEmails</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Get_Contact_for_Created_By.Email</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Add_Contact_to_colUserEmails</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Add_Current_Queue_to_colGroups</name>
        <label>Add Current Queue to colGroups</label>
        <locationX>314</locationX>
        <locationY>890</locationY>
        <assignmentItems>
            <assignToReference>colGroups</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Get_Current_Queue.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Check_if_Groups_to_Parse</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Add_Email_to_colUserEmails</name>
        <label>Add Email to colUserEmails</label>
        <locationX>1744</locationX>
        <locationY>2258</locationY>
        <assignmentItems>
            <assignToReference>colUserEmails</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Parse_User_Records.Email</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Parse_User_Records</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Add_Group_to_colGroup</name>
        <label>Add Group to colGroup</label>
        <locationX>50</locationX>
        <locationY>458</locationY>
        <assignmentItems>
            <assignToReference>colGroups</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Case.OwnerId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Check_if_Groups_to_Parse</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Add_Individual_to_colUsers</name>
        <label>Add Individual to colUsers</label>
        <locationX>600</locationX>
        <locationY>458</locationY>
        <assignmentItems>
            <assignToReference>colUsers</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Case.OwnerId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Check_if_Include_Current_Queue</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Add_Manual_Group_to_colGroups</name>
        <label>Add Manual Group to colGroups</label>
        <locationX>1370</locationX>
        <locationY>350</locationY>
        <assignmentItems>
            <assignToReference>colGroups</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>varManualGroup.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>colGroups</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>varManualGroupID</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Check_if_Groups_to_Parse</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Add_Member_to_colGroupsTemp</name>
        <label>Add Member to colGroupsTemp</label>
        <locationX>611</locationX>
        <locationY>1766</locationY>
        <assignmentItems>
            <assignToReference>colGroupsTemp</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Parse_Members.UserOrGroupId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Parse_Members</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Add_Member_to_colUsers</name>
        <label>Add Member to colUsers</label>
        <locationX>875</locationX>
        <locationY>1766</locationY>
        <assignmentItems>
            <assignToReference>colUsers</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Parse_Members.UserOrGroupId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Parse_Members</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Clear_colGroups</name>
        <label>Clear colGroups</label>
        <locationX>523</locationX>
        <locationY>2042</locationY>
        <assignmentItems>
            <assignToReference>colGroups</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>colBlank</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Move_colGroupsTemp_to_colGroups</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Clear_colGroupsTemp</name>
        <label>Clear colGroupsTemp</label>
        <locationX>523</locationX>
        <locationY>2258</locationY>
        <assignmentItems>
            <assignToReference>colGroupsTemp</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>colBlank</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <isGoTo>true</isGoTo>
            <targetReference>Check_if_Groups_to_Parse</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Error_Jump_Point</name>
        <label>Error Jump Point</label>
        <locationX>1460</locationX>
        <locationY>4430</locationY>
        <assignmentItems>
            <assignToReference>varErrorTemp</assignToReference>
            <operator>Assign</operator>
            <value>
                <numberValue>1.0</numberValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Process_Get_Contacts</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Move_colGroupsTemp_to_colGroups</name>
        <label>Move colGroupsTemp to colGroups</label>
        <locationX>523</locationX>
        <locationY>2150</locationY>
        <assignmentItems>
            <assignToReference>colGroups</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>colGroupsTemp</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Clear_colGroupsTemp</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_colNotificationUser</name>
        <label>Set colNotificationUser</label>
        <locationX>1524</locationX>
        <locationY>1958</locationY>
        <assignmentItems>
            <assignToReference>colNotificationUsers</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Parse_User_Records.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Ignore_for_Contact_Types</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Update_Notification_for_Group</name>
        <label>Update Notification for Group</label>
        <locationX>787</locationX>
        <locationY>2858</locationY>
        <assignmentItems>
            <assignToReference>varNotificationTitle</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>{!varNotificationTitle} queue {!Case.Owner:Group.Name}.</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varNotificationBody</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>{!varNotificationBody} queue {!Case.Owner:Group.Name}.</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>In_App_Notification_Queue</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Update_Notification_for_Individual</name>
        <label>Update Notification for Individual</label>
        <locationX>1051</locationX>
        <locationY>2858</locationY>
        <assignmentItems>
            <assignToReference>varNotificationTitle</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>{!varNotificationTitle} you.</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varNotificationBody</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>{!varNotificationBody} you.</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>In_App_Notification_Queue</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Check_Contact_or_User</name>
        <label>Check Contact or User</label>
        <locationX>1436</locationX>
        <locationY>1442</locationY>
        <defaultConnector>
            <targetReference>Get_User_Records_By_ID</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>User</defaultConnectorLabel>
        <rules>
            <name>Contact</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>varRecipientType</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Contact</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_User_Records_By_Email</targetReference>
            </connector>
            <label>Contact</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_if_email_ends_invalid</name>
        <label>Check if email ends invalid</label>
        <locationX>1372</locationX>
        <locationY>4214</locationY>
        <defaultConnector>
            <targetReference>Email_Contact</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Valid</defaultConnectorLabel>
        <rules>
            <name>Invalid</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Process_Get_Contacts.Email</leftValueReference>
                <operator>EndsWith</operator>
                <rightValue>
                    <stringValue>.invalid</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Process_Get_Contacts</targetReference>
            </connector>
            <label>Invalid</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_if_found_current_queue</name>
        <label>Check if found current queue</label>
        <locationX>446</locationX>
        <locationY>782</locationY>
        <defaultConnector>
            <targetReference>Check_if_Groups_to_Parse</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Not Found</defaultConnectorLabel>
        <rules>
            <name>Found</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Current_Queue.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Add_Current_Queue_to_colGroups</targetReference>
            </connector>
            <label>Found</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_if_Groups_to_Parse</name>
        <label>Check if Groups to Parse</label>
        <locationX>979</locationX>
        <locationY>1334</locationY>
        <defaultConnector>
            <targetReference>Check_Contact_or_User</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Complete</defaultConnectorLabel>
        <rules>
            <name>To_Parse</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>colGroups</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Members</targetReference>
            </connector>
            <label>To Parse</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_if_Include_Current_Queue</name>
        <label>Check if Include Current Queue</label>
        <locationX>600</locationX>
        <locationY>566</locationY>
        <defaultConnector>
            <targetReference>Check_if_Groups_to_Parse</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Exclude</defaultConnectorLabel>
        <rules>
            <name>Include</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>varIncludeCurrentQueue</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Current_Queue</targetReference>
            </connector>
            <label>Include</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_if_On_Behalf_Of</name>
        <label>Check if On Behalf Of</label>
        <locationX>1062</locationX>
        <locationY>350</locationY>
        <defaultConnector>
            <targetReference>Add_Contact_to_colUserEmails</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>For Self</defaultConnectorLabel>
        <rules>
            <name>On_Behalf</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Case.ContactId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Case.Innova_On_Behalf_Of__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Contact_for_Created_By</targetReference>
            </connector>
            <label>On Behalf</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_if_Owner_is_Group</name>
        <label>Check if Owner is Group</label>
        <locationX>325</locationX>
        <locationY>350</locationY>
        <defaultConnector>
            <targetReference>Add_Individual_to_colUsers</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Is Individual</defaultConnectorLabel>
        <rules>
            <name>Is_Group</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>frmOwnerIsGroup</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Add_Group_to_colGroup</targetReference>
            </connector>
            <label>Is Group</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_if_Send_Email</name>
        <label>Check if Send Email</label>
        <locationX>1436</locationX>
        <locationY>3482</locationY>
        <defaultConnectorLabel>Dont Send</defaultConnectorLabel>
        <rules>
            <name>Send_Email</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>varEmailTemplateName</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Email_Template.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Validate_To_Address_is_valid</targetReference>
            </connector>
            <label>Send Email</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_if_Send_Notification</name>
        <label>Check if Send Notification</label>
        <locationX>1436</locationX>
        <locationY>2534</locationY>
        <defaultConnector>
            <targetReference>Get_Email_Template</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Dont Send</defaultConnectorLabel>
        <rules>
            <name>Send</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>varNotificationTitle</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check_if_varAppendOwnerToNotification</targetReference>
            </connector>
            <label>Send</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_if_User_active</name>
        <label>Check if User active</label>
        <locationX>1656</locationX>
        <locationY>1850</locationY>
        <defaultConnector>
            <targetReference>Ignore_for_Contact_Types</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>InActive</defaultConnectorLabel>
        <rules>
            <name>Active</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Parse_User_Records.IsActive</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_colNotificationUser</targetReference>
            </connector>
            <label>Active</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_if_varAppendOwnerToNotification</name>
        <label>Check if varAppendOwnerToNotification</label>
        <locationX>1117</locationX>
        <locationY>2642</locationY>
        <defaultConnector>
            <targetReference>In_App_Notification_Queue</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>varAppendOwnerToNotification</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check_Owner_is_Group</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_Owner_is_Group</name>
        <label>Check Owner is Group</label>
        <locationX>919</locationX>
        <locationY>2750</locationY>
        <defaultConnector>
            <targetReference>Update_Notification_for_Individual</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Is Individual</defaultConnectorLabel>
        <rules>
            <name>Is_Group_Notification</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>frmOwnerIsGroup</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Notification_for_Group</targetReference>
            </connector>
            <label>Is Group</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_Recipient_Type</name>
        <label>Check Recipient Type</label>
        <locationX>979</locationX>
        <locationY>242</locationY>
        <defaultConnectorLabel>Invalid</defaultConnectorLabel>
        <rules>
            <name>Case_Agent</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>varRecipientType</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Agent</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check_if_Owner_is_Group</targetReference>
            </connector>
            <label>Case Agent</label>
        </rules>
        <rules>
            <name>Case_Contact</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>varRecipientType</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Contact</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check_if_On_Behalf_Of</targetReference>
            </connector>
            <label>Case Contact</label>
        </rules>
        <rules>
            <name>Manual_Group</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>varRecipientType</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Group</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>varManualGroup</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Add_Manual_Group_to_colGroups</targetReference>
            </connector>
            <label>Manual Group</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_run_conditions</name>
        <label>Check run conditions</label>
        <locationX>1459</locationX>
        <locationY>134</locationY>
        <defaultConnectorLabel>None</defaultConnectorLabel>
        <rules>
            <name>Available</name>
            <conditionLogic>3 AND (2 OR (1 AND 4))</conditionLogic>
            <conditions>
                <leftValueReference>varNotificationTitle</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>varEmailTemplateName</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Case</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>varNotificationBody</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check_Recipient_Type</targetReference>
            </connector>
            <label>Available</label>
        </rules>
    </decisions>
    <decisions>
        <name>Ignore_for_Contact_Types</name>
        <label>Ignore for Contact Types</label>
        <locationX>1656</locationX>
        <locationY>2150</locationY>
        <defaultConnector>
            <targetReference>Add_Email_to_colUserEmails</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Process</defaultConnectorLabel>
        <rules>
            <name>Ignore</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>varRecipientType</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Contact</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Parse_User_Records</targetReference>
            </connector>
            <label>Ignore</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_Address_Valid</name>
        <label>Is Address Valid</label>
        <locationX>1196</locationX>
        <locationY>3698</locationY>
        <defaultConnector>
            <targetReference>Get_Org_Wide_Email_Address</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Invalid</defaultConnectorLabel>
        <rules>
            <name>Valid</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Validate_To_Address_is_valid.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Contacts</targetReference>
            </connector>
            <label>Valid</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_Member_Group</name>
        <label>Is Member a Group</label>
        <locationX>743</locationX>
        <locationY>1658</locationY>
        <defaultConnector>
            <targetReference>Add_Member_to_colUsers</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Is Individual</defaultConnectorLabel>
        <rules>
            <name>Is_Group_Member</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Parse_Members.UserOrGroupId</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <stringValue>00G</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Add_Member_to_colGroupsTemp</targetReference>
            </connector>
            <label>Is Group</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <formulas>
        <name>frmOwnerIsGroup</name>
        <dataType>Boolean</dataType>
        <expression>IF(left({!Case.OwnerId},3)=&apos;00G&apos;, true, false)</expression>
    </formulas>
    <interviewLabel>Innova - Notifications - Notify Owner {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Innova - Notifications - Notify Owner</label>
    <loops>
        <name>Parse_Members</name>
        <label>Parse Members</label>
        <locationX>523</locationX>
        <locationY>1550</locationY>
        <collectionReference>Get_Members</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Is_Member_Group</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Clear_colGroups</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <name>Parse_User_Records</name>
        <label>Parse User Records</label>
        <locationX>1436</locationX>
        <locationY>1742</locationY>
        <collectionReference>colUserRecords</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Check_if_User_active</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Check_if_Send_Notification</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <name>Process_Get_Contacts</name>
        <label>Process Get Contacts</label>
        <locationX>1196</locationX>
        <locationY>4106</locationY>
        <collectionReference>Get_Contacts</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Check_if_email_ends_invalid</targetReference>
        </nextValueConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Contact_for_Created_By</name>
        <label>Get Contact for Created By</label>
        <locationX>930</locationX>
        <locationY>458</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Add_Created_By_Contact_to_colUser</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Email</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Case.CreatedBy.Email</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Contact</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Contacts</name>
        <label>Get Contacts</label>
        <locationX>1196</locationX>
        <locationY>3998</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Process_Get_Contacts</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Email</field>
            <operator>In</operator>
            <value>
                <elementReference>colUserEmails</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Contact</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Current_Queue</name>
        <label>Get Current Queue</label>
        <locationX>446</locationX>
        <locationY>674</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_if_found_current_queue</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Queue</stringValue>
            </value>
        </filters>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Case.Current_Queue__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Email_Template</name>
        <label>Get Email Template</label>
        <locationX>1436</locationX>
        <locationY>3374</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_if_Send_Email</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>varEmailTemplateName</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>EmailTemplate</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Members</name>
        <label>Get Members</label>
        <locationX>523</locationX>
        <locationY>1442</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Parse_Members</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>GroupId</field>
            <operator>In</operator>
            <value>
                <elementReference>colGroups</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>GroupMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_User_Records_By_Email</name>
        <label>Get User Records By Email</label>
        <locationX>1304</locationX>
        <locationY>1550</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Parse_User_Records</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Email</field>
            <operator>In</operator>
            <value>
                <elementReference>colUserEmails</elementReference>
            </value>
        </filters>
        <object>User</object>
        <outputReference>colUserRecords</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>Email</queriedFields>
        <queriedFields>IsActive</queriedFields>
    </recordLookups>
    <recordLookups>
        <name>Get_User_Records_By_ID</name>
        <label>Get User Records By ID</label>
        <locationX>1568</locationX>
        <locationY>1550</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Parse_User_Records</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>In</operator>
            <value>
                <elementReference>colUsers</elementReference>
            </value>
        </filters>
        <object>User</object>
        <outputReference>colUserRecords</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>Email</queriedFields>
        <queriedFields>IsActive</queriedFields>
    </recordLookups>
    <recordLookups>
        <name>Validate_To_Address_is_valid</name>
        <label>Validate To Address is valid</label>
        <locationX>1196</locationX>
        <locationY>3590</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Is_Address_Valid</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Address</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>varOrgWideEmailAddress</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>OrgWideEmailAddress</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <runInMode>SystemModeWithoutSharing</runInMode>
    <start>
        <locationX>1333</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Check_run_conditions</targetReference>
        </connector>
    </start>
    <status>Draft</status>
    <subflows>
        <name>Get_Org_Wide_Email_Address</name>
        <label>Get Org Wide Email Address</label>
        <locationX>1284</locationX>
        <locationY>3806</locationY>
        <connector>
            <targetReference>Get_Contacts</targetReference>
        </connector>
        <flowName>Innova_Get_Org_Wide_Email_Address</flowName>
        <inputAssignments>
            <name>Case</name>
            <value>
                <elementReference>Case</elementReference>
            </value>
        </inputAssignments>
        <outputAssignments>
            <assignToReference>varOrgWideEmailAddress</assignToReference>
            <name>OrgWideEmailAddress</name>
        </outputAssignments>
    </subflows>
    <variables>
        <name>Case</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <objectType>Case</objectType>
    </variables>
    <variables>
        <name>colBlank</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>colGroups</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>colGroupsTemp</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>colNotificationUsers</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>colUserEmails</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>colUserRecords</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>User</objectType>
    </variables>
    <variables>
        <name>colUsers</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varAppendOwnerToNotification</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varEmailTemplateName</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varErrorTemp</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>2</scale>
    </variables>
    <variables>
        <name>varIncludeCurrentQueue</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <name>varManualGroup</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <objectType>Group</objectType>
    </variables>
    <variables>
        <name>varManualGroupID</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varNotificationBody</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varNotificationTitle</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varOrgWideEmailAddress</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <elementReference>Case.To_Address__c</elementReference>
        </value>
    </variables>
    <variables>
        <description>Agent, Contacts, Group</description>
        <name>varRecipientType</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>Agent</stringValue>
        </value>
    </variables>
</Flow>
