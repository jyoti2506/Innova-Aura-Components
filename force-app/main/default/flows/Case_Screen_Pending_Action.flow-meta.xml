<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Goto_Record</name>
        <label>Goto Record</label>
        <locationX>50</locationX>
        <locationY>674</locationY>
        <actionName>c:navigateEverywhereLFA</actionName>
        <actionType>component</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>destinationRecordId</name>
            <value>
                <elementReference>Get_Case.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>destinationType</name>
            <value>
                <stringValue>Record</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>destinationAction</name>
            <value>
                <stringValue>view</stringValue>
            </value>
        </inputParameters>
        <nameSegment>c:navigateEverywhereLFA</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Refresh_Record</name>
        <label>Refresh Record</label>
        <locationX>50</locationX>
        <locationY>566</locationY>
        <actionName>c:UpdateScreen</actionName>
        <actionType>component</actionType>
        <connector>
            <targetReference>Goto_Record</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>recordId</name>
            <value>
                <elementReference>Get_Case.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>c:UpdateScreen</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <apiVersion>59.0</apiVersion>
    <assignments>
        <name>Set_Owner_as_current</name>
        <label>Set Owner as current</label>
        <locationX>578</locationX>
        <locationY>566</locationY>
        <assignmentItems>
            <assignToReference>tmpOwnerID</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Case.OwnerId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_Records_1</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_User_as_Owner</name>
        <label>Set User as Owner</label>
        <locationX>314</locationX>
        <locationY>566</locationY>
        <assignmentItems>
            <assignToReference>tmpOwnerID</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$User.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_Records_1</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Check_if_Pending</name>
        <label>Check if Pending</label>
        <locationX>248</locationX>
        <locationY>242</locationY>
        <defaultConnector>
            <targetReference>Set_case_to_Pending</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Not Pending</defaultConnectorLabel>
        <rules>
            <name>Is_Pending</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Case.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Pending</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Records_2</targetReference>
            </connector>
            <label>Is Pending</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_Accept_on_Pending_Enabled</name>
        <label>Is Accept on Pending Enabled</label>
        <locationX>446</locationX>
        <locationY>458</locationY>
        <defaultConnector>
            <targetReference>Set_Owner_as_current</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Label.ISC_Accept_On_Pending</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>true</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_Case.OwnerId</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <stringValue>00G</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_User_as_Owner</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <interviewLabel>Case - Screen - Pending Action {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Case - Screen - Pending Action</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordCreates>
        <name>Add_Feed_Item</name>
        <label>Add Feed Item</label>
        <locationX>446</locationX>
        <locationY>866</locationY>
        <inputAssignments>
            <field>Body</field>
            <value>
                <elementReference>FeedPost</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>IsRichText</field>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ParentId</field>
            <value>
                <elementReference>Get_Case.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>Published</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Type</field>
            <value>
                <stringValue>TextPost</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Visibility</field>
            <value>
                <stringValue>InternalUsers</stringValue>
            </value>
        </inputAssignments>
        <object>FeedItem</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Add_Feed_Item_2</name>
        <label>Add Feed Item 2</label>
        <locationX>50</locationX>
        <locationY>458</locationY>
        <connector>
            <targetReference>Refresh_Record</targetReference>
        </connector>
        <inputAssignments>
            <field>Body</field>
            <value>
                <stringValue>&lt;p&gt;Clear Pending&lt;/p&gt;</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>IsRichText</field>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ParentId</field>
            <value>
                <elementReference>Get_Case.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>Published</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Type</field>
            <value>
                <stringValue>TextPost</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Visibility</field>
            <value>
                <stringValue>InternalUsers</stringValue>
            </value>
        </inputAssignments>
        <object>FeedItem</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <name>Get_Case</name>
        <label>Get Case</label>
        <locationX>248</locationX>
        <locationY>134</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_if_Pending</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Case</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Update_Records_1</name>
        <label>Update Records 1</label>
        <locationX>446</locationX>
        <locationY>758</locationY>
        <connector>
            <targetReference>Add_Feed_Item</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Innova_Pending_Reason__c</field>
            <value>
                <elementReference>scn_Pending_Reason</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>IsStopped</field>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>tmpOwnerID</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Pending_Status__c</field>
            <value>
                <elementReference>pklPendingStatus.value</elementReference>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Records_2</name>
        <label>Update Records 2</label>
        <locationX>50</locationX>
        <locationY>350</locationY>
        <connector>
            <targetReference>Add_Feed_Item_2</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Innova_Pending_Reason__c</field>
        </inputAssignments>
        <inputAssignments>
            <field>IsStopped</field>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Pending_Status__c</field>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <screens>
        <name>Set_case_to_Pending</name>
        <label>Set case to Pending</label>
        <locationX>446</locationX>
        <locationY>350</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <backButtonLabel>Cancel</backButtonLabel>
        <connector>
            <targetReference>Is_Accept_on_Pending_Enabled</targetReference>
        </connector>
        <fields>
            <name>pklPendingStatus</name>
            <extensionName>c:fsc_quickChoiceFSC</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>displayMode</name>
                <value>
                    <stringValue>Picklist</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>inputMode</name>
                <value>
                    <stringValue>Picklist Field</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>objectName</name>
                <value>
                    <stringValue>Case</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>recordTypeId</name>
                <value>
                    <elementReference>Get_Case.RecordTypeId</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>required</name>
                <value>
                    <booleanValue>true</booleanValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>fieldName</name>
                <value>
                    <stringValue>Pending_Status__c</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>masterLabel</name>
                <value>
                    <stringValue>Pending Status</stringValue>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <fields>
            <name>scn_Pending_Reason</name>
            <fieldText>Pending Reason</fieldText>
            <fieldType>LargeTextArea</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <start>
        <locationX>122</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Case</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <textTemplates>
        <name>FeedPost</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>&lt;p&gt;Set Pending&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;Status: {!pklPendingStatus.value}&lt;/p&gt;&lt;p&gt;Reason: {!scn_Pending_Reason}&lt;/p&gt;</text>
    </textTemplates>
    <variables>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>tmpOwnerID</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
