<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>59.0</apiVersion>
    <assignments>
        <name>Add_to_colOutputUserID</name>
        <label>Add to colOutputUserID</label>
        <locationX>842</locationX>
        <locationY>782</locationY>
        <assignmentItems>
            <assignToReference>colOutputUserID</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Loop_returned_users.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_returned_users</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Add_varInputGroupID_to_colPendingGroups</name>
        <label>Add varInputGroupID to colPendingGroups</label>
        <locationX>380</locationX>
        <locationY>134</locationY>
        <assignmentItems>
            <assignToReference>colPendingGroups</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>varInputGroupID</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Are_there_entries_in_colPendingGroups</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Member_to_colPendingUsers</name>
        <label>Assign Member to colPendingUsers</label>
        <locationX>578</locationX>
        <locationY>674</locationY>
        <assignmentItems>
            <assignToReference>colPendingUsers</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Loop_returned_members.UserOrGroupId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_returned_members</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_member_to_colTempGroups</name>
        <label>Assign member to colTempGroups</label>
        <locationX>314</locationX>
        <locationY>782</locationY>
        <assignmentItems>
            <assignToReference>colTempGroups</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Loop_returned_members.UserOrGroupId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_returned_members</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Copy_colTempGroups_to_colPendingGroups</name>
        <label>Copy colTempGroups to colPendingGroups</label>
        <locationX>50</locationX>
        <locationY>1250</locationY>
        <assignmentItems>
            <assignToReference>colPendingGroups</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>colTempGroups</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Repalce_colTempGroups_with_colBlank</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Repalce_colTempGroups_with_colBlank</name>
        <label>Repalce colTempGroups with colBlank</label>
        <locationX>50</locationX>
        <locationY>1358</locationY>
        <assignmentItems>
            <assignToReference>colTempGroups</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>colBlank</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <isGoTo>true</isGoTo>
            <targetReference>Are_there_entries_in_colPendingGroups</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Replace_colPendingGroups_with_colBlank</name>
        <label>Replace colPendingGroups with colBlank</label>
        <locationX>50</locationX>
        <locationY>1142</locationY>
        <assignmentItems>
            <assignToReference>colPendingGroups</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>colBlank</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Copy_colTempGroups_to_colPendingGroups</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Are_there_entries_in_colPendingGroups</name>
        <label>Are there entries in colPendingGroups</label>
        <locationX>380</locationX>
        <locationY>242</locationY>
        <defaultConnector>
            <targetReference>Are_there_users_to_process</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes_Entries</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>colPendingGroups</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_members_for_groups_in_colPendingGroups</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Are_there_users_to_process</name>
        <label>Are there users to process</label>
        <locationX>710</locationX>
        <locationY>350</locationY>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes_Users</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>colPendingUsers</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Users_from_colPendingUsers</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Ignore</name>
        <label>Ignore</label>
        <locationX>226</locationX>
        <locationY>674</locationY>
        <defaultConnector>
            <targetReference>Assign_member_to_colTempGroups</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes_ignore</name>
            <conditionLogic>1 OR (2 and (3 or 4))</conditionLogic>
            <conditions>
                <leftValueReference>varInputIgnoreNestedGroups</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>varInputIgnoreAdmin</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Loop_returned_members.UserOrGroupId</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <elementReference>$Label.ISC_Admin_Group</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Loop_returned_members.UserOrGroupId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Label.ISC_Admin_Group</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Loop_returned_members</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Ignore_User</name>
        <label>Ignore User</label>
        <locationX>754</locationX>
        <locationY>674</locationY>
        <defaultConnector>
            <targetReference>Add_to_colOutputUserID</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes_Ignore_User</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>varInputIncludeInactive</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Loop_returned_users.IsActive</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Loop_returned_users</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_member_a_group</name>
        <label>Is member a group</label>
        <locationX>402</locationX>
        <locationY>566</locationY>
        <defaultConnector>
            <targetReference>Assign_Member_to_colPendingUsers</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes_is_group</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Loop_returned_members.UserOrGroupId</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <stringValue>00G</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Ignore</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <interviewLabel>Helper - Group ID to User IDs {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Helper - Group ID to User IDs</label>
    <loops>
        <name>Loop_returned_members</name>
        <label>Loop returned members</label>
        <locationX>50</locationX>
        <locationY>458</locationY>
        <collectionReference>Get_members_for_groups_in_colPendingGroups</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Is_member_a_group</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Replace_colPendingGroups_with_colBlank</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <name>Loop_returned_users</name>
        <label>Loop returned users</label>
        <locationX>578</locationX>
        <locationY>566</locationY>
        <collectionReference>Get_Users_from_colPendingUsers</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Ignore_User</targetReference>
        </nextValueConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_members_for_groups_in_colPendingGroups</name>
        <label>Get members for groups in colPendingGroups</label>
        <locationX>50</locationX>
        <locationY>350</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Loop_returned_members</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>GroupId</field>
            <operator>In</operator>
            <value>
                <elementReference>colPendingGroups</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>GroupMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Users_from_colPendingUsers</name>
        <label>Get Users from colPendingUsers</label>
        <locationX>578</locationX>
        <locationY>458</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Loop_returned_users</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>In</operator>
            <value>
                <elementReference>colPendingUsers</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>User</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <runInMode>SystemModeWithoutSharing</runInMode>
    <start>
        <locationX>254</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Add_varInputGroupID_to_colPendingGroups</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <variables>
        <name>colBlank</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>colOutputUserID</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>colPendingGroups</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>colPendingUsers</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>colTempGroups</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varInputGroupID</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varInputIgnoreAdmin</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <name>varInputIgnoreNestedGroups</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <name>varInputIncludeInactive</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
</Flow>
