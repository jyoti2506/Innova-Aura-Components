<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>closed1</name>
        <label>closed</label>
        <locationX>3130</locationX>
        <locationY>755</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>$Label.Innova_Custom_Notification_TypeId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>varUserId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <stringValue>{!$Record.RecordType.DeveloperName} has been closed.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <stringValue>{!$Record.RecordType.DeveloperName} {!$Record.CaseNumber} has been closed.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>customNotificationAction</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Email_for_Agent_Case_Created</name>
        <label>Email for Agent Case Created</label>
        <locationX>72</locationX>
        <locationY>2003</locationY>
        <actionName>Case.Innova_Email_to_Queue_New_Case_Created</actionName>
        <actionType>emailAlert</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>SObjectRowId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>Case.Innova_Email_to_Queue_New_Case_Created</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <description>Innova - Email to Agent - Assign Case to Agent
Innova Incident is Reassign Email Template https://innovasolutionsitsc--fullsb.sandbox.lightning.force.com/lightning/setup/CommunicationTemplatesEmail/page?address=%2F00XDC000000KDUp</description>
        <name>Email_to_Agent_case_to_Agent</name>
        <label>Email to Agent</label>
        <locationX>1282</locationX>
        <locationY>755</locationY>
        <actionName>Case.Innova_Email_to_Agent_Assign_Case_to_Agent</actionName>
        <actionType>emailAlert</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>SObjectRowId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>Case.Innova_Email_to_Agent_Assign_Case_to_Agent</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>If_incident_Owner_is_Queue</name>
        <label>If incident Owner is Queue</label>
        <locationX>336</locationX>
        <locationY>2219</locationY>
        <actionName>Case.Innova_Email_to_Queue_New_Case_Created</actionName>
        <actionType>emailAlert</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>SObjectRowId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>Case.Innova_Email_to_Queue_New_Case_Created</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>In_App_Notification_Contact</name>
        <label>In-App Notification - Contact</label>
        <locationX>490</locationX>
        <locationY>1187</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <connector>
            <targetReference>Innova_Email_to_Creator</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>$Label.Innova_Custom_Notification_TypeId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>varUserIdFromContact</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <stringValue>New {!$Record.RecordType.DeveloperName} has been created.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <stringValue>New {!$Record.RecordType.DeveloperName} {!$Record.CaseNumber} has been created.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>customNotificationAction</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <description>Only sends if email sender&apos;s email is linked to a contact with a matching email.</description>
        <name>In_App_Notification_Email_Sender</name>
        <label>In-App Notification - Email Sender</label>
        <locationX>50</locationX>
        <locationY>863</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <connector>
            <targetReference>Send_Email_alert_to_Requester</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>$Label.Innova_Custom_Notification_TypeId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>varUserId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <stringValue>New {!$Record.RecordType.DeveloperName} has been created.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <stringValue>New {!$Record.RecordType.DeveloperName} {!$Record.CaseNumber} has been created.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>customNotificationAction</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>In_App_Notification_For_CreatedBy</name>
        <label>In-App Notification For CreatedBy</label>
        <locationX>490</locationX>
        <locationY>1079</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <connector>
            <targetReference>In_App_Notification_Contact</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>$Label.Innova_Custom_Notification_TypeId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>varUserId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <stringValue>New {!$Record.RecordType.DeveloperName} has been created.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <stringValue>New {!$Record.RecordType.DeveloperName} {!$Record.CaseNumber} has been created.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>customNotificationAction</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <description>Innova - Email to Creator - New Case Created (only in case of on behalf)</description>
        <name>Innova_Email_to_Creator</name>
        <label>Innova - Email to Creator</label>
        <locationX>490</locationX>
        <locationY>1295</locationY>
        <actionName>Case.Innova_Email_to_Creator_New_Case_Requestor</actionName>
        <actionType>emailAlert</actionType>
        <connector>
            <targetReference>Notify_Contact_on_Create</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>SObjectRowId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>Case.Innova_Email_to_Creator_New_Case_Requestor</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <description>Email to OnBehalf - Case is Resolved</description>
        <name>Innova_Email_to_OnBehalf_Case_is_Resolved</name>
        <label>Innova - Email to OnBehalf - Case is Resolved</label>
        <locationX>2338</locationX>
        <locationY>863</locationY>
        <actionName>Case.Innova_Email_to_OnBehalf_Case_is_Resolved</actionName>
        <actionType>emailAlert</actionType>
        <connector>
            <targetReference>Notify_Requestor_On_Close</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>SObjectRowId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>Case.Innova_Email_to_OnBehalf_Case_is_Resolved</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <description>Sends an email to request / agent that the case is resolved.</description>
        <name>Innova_Email_to_Requestor_Case_is_Resolved</name>
        <label>Innova - Email to Requestor - Case is Resolved</label>
        <locationX>2866</locationX>
        <locationY>755</locationY>
        <actionName>Case.Innova_Email_to_Requestor_Case_is_Resolved</actionName>
        <actionType>emailAlert</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>SObjectRowId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>Case.Innova_Email_to_Requestor_Case_is_Resolved</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Notification_for_closed</name>
        <label>Notification for closed</label>
        <locationX>3658</locationX>
        <locationY>647</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>$Label.Innova_Custom_Notification_TypeId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>ContactId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <stringValue>{!$Record.RecordType.DeveloperName} has been closed.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <stringValue>{!$Record.RecordType.DeveloperName} {!$Record.CaseNumber} has been closed.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>customNotificationAction</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Notification_for_New</name>
        <label>Notification for New</label>
        <locationX>1018</locationX>
        <locationY>755</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <connector>
            <targetReference>Send_Email_alert_to_Contact1</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>$Label.Innova_Custom_Notification_TypeId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>ContactId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <stringValue>New {!$Record.RecordType.DeveloperName} has been created.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <stringValue>New {!$Record.RecordType.DeveloperName} {!$Record.CaseNumber} has been created.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>customNotificationAction</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Notification_for_queue</name>
        <label>Notification for queue</label>
        <locationX>1546</locationX>
        <locationY>863</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>$Label.Innova_Custom_Notification_TypeId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>QueueId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <stringValue>New {!$Record.RecordType.DeveloperName} has been assigned to {!$Record.Owner:Group.Name}.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <stringValue>New {!$Record.RecordType.DeveloperName} {!$Record.CaseNumber} has been assigned to {!$Record.Owner:Group.Name}.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>customNotificationAction</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Notification_for_queue1</name>
        <label>Notification for queue</label>
        <locationX>336</locationX>
        <locationY>2111</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <connector>
            <targetReference>If_incident_Owner_is_Queue</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>$Label.Innova_Custom_Notification_TypeId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>QueueId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <stringValue>New {!$Record.RecordType.DeveloperName} has been assigned to you.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <stringValue>New {!$Record.RecordType.DeveloperName} {!$Record.CaseNumber} has been assigned to you.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>customNotificationAction</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Notification_for_resolved</name>
        <label>Notification for resolved</label>
        <locationX>2866</locationX>
        <locationY>647</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <connector>
            <targetReference>Innova_Email_to_Requestor_Case_is_Resolved</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>$Label.Innova_Custom_Notification_TypeId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>ContactId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <stringValue>{!$Record.RecordType.DeveloperName} has been resolved.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <stringValue>{!$Record.RecordType.DeveloperName} {!$Record.CaseNumber} has been resolved.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>customNotificationAction</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Notification_for_user</name>
        <label>Notification for user</label>
        <locationX>1282</locationX>
        <locationY>647</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <connector>
            <targetReference>Email_to_Agent_case_to_Agent</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>$Label.Innova_Custom_Notification_TypeId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>OwnerId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <stringValue>New {!$Record.RecordType.DeveloperName} has been assigned to you.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <stringValue>New {!$Record.RecordType.DeveloperName} {!$Record.CaseNumber} has been assigned to you.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>customNotificationAction</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Notification_for_user1</name>
        <label>Notification for user</label>
        <locationX>72</locationX>
        <locationY>1895</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <connector>
            <targetReference>Email_for_Agent_Case_Created</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>$Label.Innova_Custom_Notification_TypeId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>OwnerId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <stringValue>New {!$Record.RecordType.DeveloperName} has been assigned to you.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <stringValue>New {!$Record.RecordType.DeveloperName} {!$Record.CaseNumber} has been assigned to you.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>customNotificationAction</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Notify_Contact_on_Create</name>
        <label>Notify Contact on Create</label>
        <locationX>490</locationX>
        <locationY>1403</locationY>
        <actionName>Case.Innova_Email_to_Requestor_New_Case_Created</actionName>
        <actionType>emailAlert</actionType>
        <connector>
            <targetReference>If_User_and_Queue1</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>SObjectRowId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>Case.Innova_Email_to_Requestor_New_Case_Created</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Notify_Requestor_On_Close</name>
        <label>Notify Requestor On Close</label>
        <locationX>2338</locationX>
        <locationY>971</locationY>
        <actionName>Case.Innova_Email_to_Requestor_Case_is_Resolved</actionName>
        <actionType>emailAlert</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>SObjectRowId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>Case.Innova_Email_to_Requestor_Case_is_Resolved</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>resolved1</name>
        <label>resolved</label>
        <locationX>2338</locationX>
        <locationY>755</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <connector>
            <targetReference>Innova_Email_to_OnBehalf_Case_is_Resolved</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>$Label.Innova_Custom_Notification_TypeId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>varUserId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <stringValue>{!$Record.RecordType.DeveloperName} has been resolved.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <stringValue>{!$Record.RecordType.DeveloperName} {!$Record.CaseNumber} has been resolved.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>customNotificationAction</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Send_Email_alert_to_Contact1</name>
        <label>Send Email alert to Contact</label>
        <locationX>1018</locationX>
        <locationY>863</locationY>
        <actionName>Case.Innova_Email_to_Requestor_New_Case_Created</actionName>
        <actionType>emailAlert</actionType>
        <connector>
            <targetReference>If_User_and_Queue1</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>SObjectRowId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>Case.Innova_Email_to_Requestor_New_Case_Created</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Send_Email_alert_to_Requester</name>
        <label>Send Email alert to Requester</label>
        <locationX>50</locationX>
        <locationY>971</locationY>
        <actionName>Case.Innova_Email_to_Requestor_New_Case_Created</actionName>
        <actionType>emailAlert</actionType>
        <connector>
            <targetReference>If_User_and_Queue1</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>SObjectRowId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>Case.Innova_Email_to_Requestor_New_Case_Created</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <apiVersion>57.0</apiVersion>
    <assignments>
        <name>Assignment_Contact</name>
        <label>Assignment - Contact</label>
        <locationX>490</locationX>
        <locationY>863</locationY>
        <assignmentItems>
            <assignToReference>ContactId</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>$Record.ContactId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Set_UserIdFromContact</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assignment_CreatedBy</name>
        <label>Assignment - CreatedBy</label>
        <locationX>490</locationX>
        <locationY>755</locationY>
        <assignmentItems>
            <assignToReference>varUserId</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>$Record.CreatedById</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Assignment_Contact</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Ids_Assign</name>
        <label>Ids Assign</label>
        <locationX>2338</locationX>
        <locationY>647</locationY>
        <assignmentItems>
            <assignToReference>varUserId</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>UserId.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>resolved1</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Ids_Assign2</name>
        <label>Ids Assign2</label>
        <locationX>3130</locationX>
        <locationY>647</locationY>
        <assignmentItems>
            <assignToReference>varUserId</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Getuser.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>closed1</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Ids_Assignment</name>
        <label>Ids Assignment</label>
        <locationX>1018</locationX>
        <locationY>647</locationY>
        <assignmentItems>
            <assignToReference>ContactId</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>$Record.CreatedBy.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Notification_for_New</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Ids_Assignment1</name>
        <label>Ids Assignment1</label>
        <locationX>2866</locationX>
        <locationY>539</locationY>
        <assignmentItems>
            <assignToReference>ContactId</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>$Record.CreatedBy.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Notification_for_resolved</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Ids_Assignment2</name>
        <label>Ids Assignment2</label>
        <locationX>3658</locationX>
        <locationY>539</locationY>
        <assignmentItems>
            <assignToReference>ContactId</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>$Record.CreatedBy.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Notification_for_closed</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>QueueId_assignment</name>
        <label>QueueId assignment</label>
        <locationX>1546</locationX>
        <locationY>755</locationY>
        <assignmentItems>
            <assignToReference>QueueId</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Notification_for_queue</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>QueueId_assignment1</name>
        <label>QueueId assignment</label>
        <locationX>336</locationX>
        <locationY>2003</locationY>
        <assignmentItems>
            <assignToReference>QueueId</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Notification_for_queue1</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_UserIdFromContact</name>
        <label>Set UserIdFromContact</label>
        <locationX>490</locationX>
        <locationY>971</locationY>
        <assignmentItems>
            <assignToReference>varUserIdFromContact</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Get_UserId_From_Contact_Email.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>In_App_Notification_For_CreatedBy</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_varUserId</name>
        <label>Set varUserId</label>
        <locationX>50</locationX>
        <locationY>755</locationY>
        <assignmentItems>
            <assignToReference>varUserId</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Get_User_From_Contact_Email.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>In_App_Notification_Email_Sender</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>UserId_Assignment</name>
        <label>UserId Assignment</label>
        <locationX>1282</locationX>
        <locationY>539</locationY>
        <assignmentItems>
            <assignToReference>OwnerId</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>$Record.Owner:User.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Notification_for_user</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>UserId_Assignment1</name>
        <label>UserId Assignment</label>
        <locationX>72</locationX>
        <locationY>1787</locationY>
        <assignmentItems>
            <assignToReference>OwnerId</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>$Record.Owner:User.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Notification_for_user1</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Case_Origin</name>
        <label>Case Origin</label>
        <locationX>468</locationX>
        <locationY>431</locationY>
        <defaultConnector>
            <targetReference>Requested_For_NOTEQUAL_Requested_By</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Portal / IT agent  Origin</defaultConnectorLabel>
        <rules>
            <name>Email_Origin</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Origin</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Email</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Found_Contact</targetReference>
            </connector>
            <label>Email Origin</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check</name>
        <label>Check</label>
        <locationX>2602</locationX>
        <locationY>431</locationY>
        <defaultConnector>
            <targetReference>Ids_Assignment1</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>On_behalf_of1</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Innova_On_Behalf_Of__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>UserId</targetReference>
            </connector>
            <label>On behalf of</label>
        </rules>
        <rules>
            <name>Contact_is_null</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.ContactId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <label>Contact is null</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check1</name>
        <label>Check</label>
        <locationX>3394</locationX>
        <locationY>431</locationY>
        <defaultConnector>
            <targetReference>Ids_Assignment2</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>On_behalf_Of2</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Innova_On_Behalf_Of__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Getuser</targetReference>
            </connector>
            <label>On behalf Of</label>
        </rules>
        <rules>
            <name>Contact_is_null1</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.ContactId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <label>Contact is null</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_Id</name>
        <label>Check Id</label>
        <locationX>1678</locationX>
        <locationY>647</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Queue_Id.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>QueueId_assignment</targetReference>
            </connector>
            <label>yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_Id1</name>
        <label>Check Id</label>
        <locationX>468</locationX>
        <locationY>1895</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>yes1</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Queue_Id1.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>QueueId_assignment1</targetReference>
            </connector>
            <label>yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_status</name>
        <label>Check status</label>
        <locationX>2195</locationX>
        <locationY>323</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>New</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>New</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>IsNew</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Case_Origin</targetReference>
            </connector>
            <label>New</label>
        </rules>
        <rules>
            <name>Assigned</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.OwnerId</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>If_User_and_Queue</targetReference>
            </connector>
            <label>Assigned</label>
        </rules>
        <rules>
            <name>Resolved</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Resolved</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check</targetReference>
            </connector>
            <label>Resolved</label>
        </rules>
        <rules>
            <name>Closed</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Closed</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check1</targetReference>
            </connector>
            <label>Closed</label>
        </rules>
    </decisions>
    <decisions>
        <name>Found_Contact</name>
        <label>Found Contact?</label>
        <locationX>182</locationX>
        <locationY>539</locationY>
        <defaultConnector>
            <targetReference>If_User_and_Queue1</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>NO - Contact Not Found</defaultConnectorLabel>
        <rules>
            <name>YES_Found_Contact</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.ContactId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_User_From_Contact_Email</targetReference>
            </connector>
            <label>YES - Found Contact</label>
        </rules>
    </decisions>
    <decisions>
        <name>If_User_and_Queue</name>
        <label>If User and Queue</label>
        <locationX>1678</locationX>
        <locationY>431</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>IT_Agent_assign</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Owner:User.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.OwnerId</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>UserId_Assignment</targetReference>
            </connector>
            <label>IT Agent</label>
        </rules>
        <rules>
            <name>Queue</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Owner:Group.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.OwnerId</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Queue_Id</targetReference>
            </connector>
            <label>Queue</label>
        </rules>
    </decisions>
    <decisions>
        <name>If_User_and_Queue1</name>
        <label>If User and Queue1</label>
        <locationX>468</locationX>
        <locationY>1679</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>User1</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Owner:User.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>UserId_Assignment1</targetReference>
            </connector>
            <label>User1</label>
        </rules>
        <rules>
            <name>Queue1</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Owner:Group.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Queue_Id1</targetReference>
            </connector>
            <label>Queue1</label>
        </rules>
    </decisions>
    <decisions>
        <name>Requested_For_NOTEQUAL_Requested_By</name>
        <label>Requested For NOTEQUAL Requested By</label>
        <locationX>754</locationX>
        <locationY>539</locationY>
        <defaultConnector>
            <targetReference>Ids_Assignment</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>For Self</defaultConnectorLabel>
        <rules>
            <name>On_Behalf</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.CreatedBy.Email</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record.Contact.Email</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.ContactId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_UserId_From_Contact_Email</targetReference>
            </connector>
            <label>On Behalf</label>
        </rules>
        <rules>
            <name>IF_Contact_not_present</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.ContactId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <label>IF Contact not present</label>
        </rules>
    </decisions>
    <description>10.6.23 added {!$Record.Owner:Group.Name} to notification for queue assignment - Jo
for null contact</description>
    <environments>Default</environments>
    <formulas>
        <name>IsNew</name>
        <dataType>Boolean</dataType>
        <expression>IsNew()</expression>
    </formulas>
    <interviewLabel>Innova - Incident Notifications {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Innova - Incident and Request Notifications</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Queue_Id</name>
        <label>Get Queue Id</label>
        <locationX>1678</locationX>
        <locationY>539</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_Id</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>GroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Owner:Group.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>GroupMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Queue_Id1</name>
        <label>Get Queue Id</label>
        <locationX>468</locationX>
        <locationY>1787</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_Id1</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>GroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Owner:Group.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>GroupMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_User_From_Contact_Email</name>
        <label>Get User From Contact Email</label>
        <locationX>50</locationX>
        <locationY>647</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Set_varUserId</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Email</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Contact.Email</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_UserId_From_Contact_Email</name>
        <label>Get UserId From Contact Email</label>
        <locationX>490</locationX>
        <locationY>647</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assignment_CreatedBy</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Email</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.CreatedBy.Email</elementReference>
            </value>
        </filters>
        <filters>
            <field>LastName</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Platform Integration User</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Getuser</name>
        <label>Get user</label>
        <locationX>3130</locationX>
        <locationY>539</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Ids_Assign2</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Email</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Innova_On_Behalf_Of__r.Email</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>UserId</name>
        <label>UserId</label>
        <locationX>2338</locationX>
        <locationY>539</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Ids_Assign</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Email</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Innova_On_Behalf_Of__r.Email</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>2069</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Check_status</targetReference>
        </connector>
        <filterFormula>{!$Record.RecordType.DeveloperName}= &apos;Incident&apos; || {!$Record.RecordType.DeveloperName}= &apos;Request&apos;</filterFormula>
        <object>Case</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Obsolete</status>
    <variables>
        <name>ContactId</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>OwnerId</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>QueueId</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varUserId</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varUserIdFromContact</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
