<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <description>Notify Task owner</description>
        <name>Notify_Task_owner</name>
        <label>Notify Task owner</label>
        <locationX>182</locationX>
        <locationY>2063</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>$Label.Innova_Custom_Notification_TypeId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>varTaskWarning</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <stringValue>Warning of Task for Priority Very High</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <stringValue>{!$Record.ITSC_Task__r.Innova_Subject__c} Warning Resolution</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>customNotificationAction</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Notify_Task_owner1</name>
        <label>Notify Task owner</label>
        <locationX>1810</locationX>
        <locationY>2063</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>$Label.Innova_Custom_Notification_TypeId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>varTaskWarning</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <stringValue>Warning of Task for Priority High</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <stringValue>{!$Record.ITSC_Task__r.Name} Resolution Warning</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>customNotificationAction</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <description>Send In-app upon 2nd warning before 1 day to queue manager</description>
        <name>Send_In_app_upon_1st_warning</name>
        <label>Send In-app upon 1st warning</label>
        <locationX>6430</locationX>
        <locationY>755</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>$Label.Innova_Custom_Notification_TypeId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>varWarning</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <stringValue>Warning For Request</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <stringValue>{!$Record.CaseNumber} Resolution Warning</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>customNotificationAction</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <description>Send In-app upon 2nd warning before 1 day to queue manager</description>
        <name>Send_In_app_upon_2nd_warning</name>
        <label>Send In-app upon 2nd warning</label>
        <locationX>5902</locationX>
        <locationY>1055</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>$Label.Innova_Custom_Notification_TypeId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>varWarning</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <stringValue>Warning for Request</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <stringValue>{!$Record.CaseNumber} Resolution Warning</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>customNotificationAction</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Send_In_app_upon_Resolution_Violation_for_Service_Request</name>
        <label>Send In-app upon Resolution Violation for Service Request</label>
        <locationX>6958</locationX>
        <locationY>1055</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>$Label.Innova_Custom_Notification_TypeId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>varViolation</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <stringValue>Violation For Request</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <stringValue>{!$Record.CaseNumber} Resolution Violation</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>customNotificationAction</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Send_Inapp_upon_resolution_Violation</name>
        <label>Send Inapp upon resolution Violation for Queue Manager</label>
        <locationX>3702</locationX>
        <locationY>1055</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>$Label.Innova_Custom_Notification_TypeId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>varViolation</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <stringValue>Violation of Priority Medium</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <stringValue>{!$Record.CaseNumber} Resolution SLA is Violated queue manager</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>customNotificationAction</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Send_Inapp_upon_resolution_Violation0</name>
        <label>Send Inapp upon resolution Violation</label>
        <locationX>2382</locationX>
        <locationY>863</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>$Label.Innova_Custom_Notification_TypeId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <stringValue>{!$Record.CaseNumber} Resolution SLA is Violated</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <stringValue>Violation of Priority High</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>varViolation</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>customNotificationAction</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Send_Inapp_upon_resolution_Violation00</name>
        <label>Send Inapp upon resolution Violation</label>
        <locationX>4934</locationX>
        <locationY>1055</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>$Label.Innova_Custom_Notification_TypeId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <stringValue>{!$Record.CaseNumber} Resolution SLA is Violated</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <stringValue>Violation of Priority Low</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>varViolation</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>customNotificationAction</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Send_Inapp_upon_resolution_warning_High</name>
        <label>Send Inapp upon resolution warning (High)</label>
        <locationX>1942</locationX>
        <locationY>1847</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <connector>
            <targetReference>To_check_for_Task</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>$Label.Innova_Custom_Notification_TypeId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <stringValue>{!$Record.CaseNumber} Resolution Warning</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <stringValue>Warning of Priority High</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>varWarning</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>customNotificationAction</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Send_Inapp_upon_resolution_Warning_Low</name>
        <label>Send Inapp upon resolution Warning(Low)</label>
        <locationX>4406</locationX>
        <locationY>647</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>$Label.Innova_Custom_Notification_TypeId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <stringValue>{!$Record.CaseNumber} Resolution Warning</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <stringValue>Warning of Priority Low</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>varWarning</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>customNotificationAction</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Send_Inapp_upon_resolution_Warning_Medium</name>
        <label>Send Inapp upon resolution Warning(Medium)</label>
        <locationX>3174</locationX>
        <locationY>647</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>$Label.Innova_Custom_Notification_TypeId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>varWarning</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <stringValue>Warning of Priority Medium</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <stringValue>{!$Record.CaseNumber} Resolution Warning</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>customNotificationAction</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Violation_Inapp_for_Very_High_Priority</name>
        <label>Violation Inapp for Very High Priority</label>
        <locationX>886</locationX>
        <locationY>1355</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>$Label.Innova_Custom_Notification_TypeId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <stringValue>{!$Record.CaseNumber} Resolution SLA is Violated</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <stringValue>Violation of Priority Very High</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>varViolation</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>customNotificationAction</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Warning_Inapp_for_Very_High_Priority</name>
        <label>Warning Inapp for Very High Priority</label>
        <locationX>314</locationX>
        <locationY>1847</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <connector>
            <targetReference>Task_is_Present</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>$Label.Innova_Custom_Notification_TypeId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <stringValue>{!$Record.CaseNumber} Resolution Warning</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <stringValue>Warning of Priority Very High</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>varWarning</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>customNotificationAction</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <apiVersion>57.0</apiVersion>
    <assignments>
        <name>Assigment_for_Violation1</name>
        <label>Assigment for Violation</label>
        <locationX>4934</locationX>
        <locationY>947</locationY>
        <assignmentItems>
            <assignToReference>varViolation</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Send_Inapp_upon_resolution_Violation00</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_value_to_CIO</name>
        <label>Assign value to CIO</label>
        <locationX>754</locationX>
        <locationY>1163</locationY>
        <assignmentItems>
            <assignToReference>varViolation</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Get_User_Record.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Violation_Inapp_for_Very_High_Priority</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assignment_for_service_Request_Violation</name>
        <label>Assignment for service Request Violation</label>
        <locationX>6958</locationX>
        <locationY>863</locationY>
        <assignmentItems>
            <assignToReference>varViolation</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Get_Queue_manager_for_Service_Request_Violation_owner_is_user.Queue_Manager__r.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Send_In_app_upon_Resolution_Violation_for_Service_Request</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assignment_for_Task</name>
        <label>Assignment for Task</label>
        <locationX>270</locationX>
        <locationY>1379</locationY>
        <assignmentItems>
            <assignToReference>varTaskWarning</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Loop_To_Get_Task_Owner.OwnerId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ToGetOwner</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Loop_To_Get_Task_Owner.OwnerId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_To_Get_Task_Owner</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assignment_for_Task1</name>
        <label>Assignment for Task</label>
        <locationX>1898</locationX>
        <locationY>1379</locationY>
        <assignmentItems>
            <assignToReference>varTaskWarning</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Loop_To_Get_Task_Owner1.OwnerId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ToGetOwner</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Loop_To_Get_Task_Owner1.OwnerId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_To_Get_Task_Owner1</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Violation_Assignment_for_priority_high</name>
        <label>Violation Assignment for priority high</label>
        <locationX>2382</locationX>
        <locationY>755</locationY>
        <assignmentItems>
            <assignToReference>varViolation</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Get_IT_Leadership_Group.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Send_Inapp_upon_resolution_Violation0</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Violation_assignment_for_Priority_Low_as_owner_is_Queue</name>
        <label>Violation assignment for Priority Low as owner is Queue</label>
        <locationX>4670</locationX>
        <locationY>755</locationY>
        <assignmentItems>
            <assignToReference>varViolation</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Get_Queue_Manager_for_Low_priority_for_Queue_violation.Queue_Manager__r.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Assigment_for_Violation1</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Violation_assignment_for_priority_Low_as_owner_is_user</name>
        <label>Violation assignment for priority Low as owner is user</label>
        <locationX>4934</locationX>
        <locationY>755</locationY>
        <assignmentItems>
            <assignToReference>varViolation</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Get_Queue_manager_for_user_for_Low_priority_violation.Queue_Manager__r.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Assigment_for_Violation1</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Violation_assignment_for_priority_Medium_as_owner_is_queue</name>
        <label>Violation assignment for priority Medium as owner is queue</label>
        <locationX>3438</locationX>
        <locationY>755</locationY>
        <assignmentItems>
            <assignToReference>varViolation</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Get_Queue_Manager_for_medium_priority_for_Queue_violation.Queue_Manager__r.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Warning_assignment_for_priority_Medium1</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Violation_assignment_for_priority_medium_as_owner_is_user</name>
        <label>Violation assignment for priority medium as owner is user</label>
        <locationX>3702</locationX>
        <locationY>755</locationY>
        <assignmentItems>
            <assignToReference>varViolation</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Get_Queue_manager_for_user_for_medium_priority_violation.Queue_Manager__r.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Warning_assignment_for_priority_Medium1</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Violation_Assignment_for_priority_VH</name>
        <label>Violation Assignment for priority VH</label>
        <locationX>754</locationX>
        <locationY>863</locationY>
        <assignmentItems>
            <assignToReference>varViolation</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Get_group_of_IT_Leadership.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Check_is_CIO_present</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Violation_Assignment_for_service_request_as_owner_is_Queue</name>
        <label>Violation Assignment for  service request as owner is Queue</label>
        <locationX>6694</locationX>
        <locationY>863</locationY>
        <assignmentItems>
            <assignToReference>varViolation</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Get_Queue_Manager_for_service_request_for_Violation.Queue_Manager__r.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Send_In_app_upon_Resolution_Violation_for_Service_Request</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Warning_assignment_fo_service_request_as_owner_is_Queue</name>
        <label>Warning assignment fo service request as owner is Queue</label>
        <locationX>5638</locationX>
        <locationY>863</locationY>
        <assignmentItems>
            <assignToReference>varWarning</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Get_Queue_Manager_for_service_request_for_2nd_warning.Queue_Manager__r.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Send_In_app_upon_2nd_warning</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Warning_Assignment_for_1st_warning_for_service_request_as_owner_is_Queue</name>
        <label>Warning Assignment for 1st warning for service request as owner is Queue</label>
        <locationX>6430</locationX>
        <locationY>647</locationY>
        <assignmentItems>
            <assignToReference>varWarning</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Send_In_app_upon_1st_warning</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Warning_assignment_for_priority_High</name>
        <label>Warning assignment for priority High</label>
        <locationX>1942</locationX>
        <locationY>1739</locationY>
        <assignmentItems>
            <assignToReference>varWarning</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Send_Inapp_upon_resolution_warning_High</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Warning_assignment_for_priority_high_as_owner_is_queue</name>
        <label>Warning assignment for priority high as owner is queue</label>
        <locationX>1678</locationX>
        <locationY>755</locationY>
        <assignmentItems>
            <assignToReference>varWarning</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Get_Queue_Manager_for_high_Priority_warning.Queue_Manager__r.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Check_For_Task_is_Present1</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Warning_assignment_for_priority_high_as_owner_is_user</name>
        <label>Warning assignment for priority high as owner is user</label>
        <locationX>1942</locationX>
        <locationY>755</locationY>
        <assignmentItems>
            <assignToReference>varWarning</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Get_Queue_manager_for_user_for_high_priority.Queue_Manager__r.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Check_For_Task_is_Present1</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Warning_assignment_for_priority_Low</name>
        <label>Warning assignment for priority Low</label>
        <locationX>4406</locationX>
        <locationY>539</locationY>
        <assignmentItems>
            <assignToReference>varWarning</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Send_Inapp_upon_resolution_Warning_Low</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Warning_assignment_for_priority_Medium</name>
        <label>Warning assignment for priority Medium</label>
        <locationX>3174</locationX>
        <locationY>539</locationY>
        <assignmentItems>
            <assignToReference>varWarning</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Send_Inapp_upon_resolution_Warning_Medium</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Warning_assignment_for_priority_Medium1</name>
        <label>Warning assignment for priority Medium</label>
        <locationX>3702</locationX>
        <locationY>947</locationY>
        <assignmentItems>
            <assignToReference>varViolation</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Send_Inapp_upon_resolution_Violation</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Warning_assignment_for_priority_very_high_as_owner_is_user</name>
        <label>Warning assignment for priority very high as owner is user</label>
        <locationX>314</locationX>
        <locationY>755</locationY>
        <assignmentItems>
            <assignToReference>varWarning</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Get_Queue_manager_for_user_for_Very_high_priority.Queue_Manager__r.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Check_For_Task_is_Present</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Warning_assignment_for_priority_VH</name>
        <label>Warning assignment for priority VH</label>
        <locationX>314</locationX>
        <locationY>1739</locationY>
        <assignmentItems>
            <assignToReference>varWarning</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Warning_Inapp_for_Very_High_Priority</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Warning_assignment_for_priority_VH_as_owner_is_queue</name>
        <label>Warning assignment for priority VH as owner is queue</label>
        <locationX>50</locationX>
        <locationY>755</locationY>
        <assignmentItems>
            <assignToReference>varWarning</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Get_Queue_Manager1.Queue_Manager__r.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Check_For_Task_is_Present</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Warning_assignment_for_service_Request</name>
        <label>Warning assignment for service Request</label>
        <locationX>5902</locationX>
        <locationY>863</locationY>
        <assignmentItems>
            <assignToReference>varWarning</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Get_Queue_manager_for_Service_Request.Queue_Manager__r.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Send_In_app_upon_2nd_warning</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Check_for_owner</name>
        <label>Check for owner</label>
        <locationX>5902</locationX>
        <locationY>647</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>If_Owner_is_Queue11</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Owner:Group.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Queue_Manager_for_service_request_for_2nd_warning</targetReference>
            </connector>
            <label>If Owner is Queue</label>
        </rules>
        <rules>
            <name>If_Owner_is_User11</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Owner:User.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.wkitsm__PreviousQueue__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record.Owner:Group.Id</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Queue_manager_for_Service_Request</targetReference>
            </connector>
            <label>If Owner is User</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_for_Owner11</name>
        <label>Check for Owner</label>
        <locationX>6958</locationX>
        <locationY>647</locationY>
        <defaultConnector>
            <targetReference>Send_In_app_upon_Resolution_Violation_for_Service_Request</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>If_Owner_is_Queue0</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Owner:Group.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Queue_Manager_for_service_request_for_Violation</targetReference>
            </connector>
            <label>If Owner is Queue</label>
        </rules>
        <rules>
            <name>If_Owner_is_User0</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Owner:User.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.wkitsm__PreviousQueue__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record.Owner:Group.Id</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Queue_manager_for_Service_Request_Violation_owner_is_user</targetReference>
            </connector>
            <label>If Owner is User</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_for_Previous_Queue</name>
        <label>Check for Previous Queue</label>
        <locationX>3702</locationX>
        <locationY>539</locationY>
        <defaultConnector>
            <targetReference>Warning_assignment_for_priority_Medium1</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>If_Owner_is_Queue</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Owner:Group.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Queue_Manager_for_medium_priority_for_Queue_violation</targetReference>
            </connector>
            <label>If Owner is Queue</label>
        </rules>
        <rules>
            <name>If_Owner_is_User</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Owner:User.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.wkitsm__PreviousQueue__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record.Owner:Group.Id</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Queue_manager_for_user_for_medium_priority_violation</targetReference>
            </connector>
            <label>If Owner is User</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_for_Previous_Queue1</name>
        <label>Check for Previous Queue</label>
        <locationX>4934</locationX>
        <locationY>539</locationY>
        <defaultConnector>
            <targetReference>Assigment_for_Violation1</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>If_Owner_is_Queue1</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Owner:Group.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Queue_Manager_for_Low_priority_for_Queue_violation</targetReference>
            </connector>
            <label>If Owner is Queue</label>
        </rules>
        <rules>
            <name>If_Owner_is_User1</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Owner:User.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.wkitsm__PreviousQueue__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record.Owner:Group.Id</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Queue_manager_for_user_for_Low_priority_violation</targetReference>
            </connector>
            <label>If Owner is User</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_for_Service_Request</name>
        <label>Check for Service Request</label>
        <locationX>7156</locationX>
        <locationY>431</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Check_Selected_Service_Request_Type</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Innova_Service_Request_Trigger__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Onboarding Request</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Innova_Service_Request_Trigger__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Termination Request</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Innova_Service_Request_Trigger__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Hardware Request</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Innova_Service_Request_Trigger__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>New Hire Application /Software</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Innova_Service_Request_Trigger__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Software/Application Request</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Innova_Service_Request_Trigger__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>New Hire w/ Bundles</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Innova_Service_Request_Trigger__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>IT Request</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Innova_Service_Request_Trigger__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Signature Template</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Warning_Violation_For_Service_Request</targetReference>
            </connector>
            <label>Check Selected Service Request Type</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_For_Task_is_Present</name>
        <label>Check For Task is Present</label>
        <locationX>314</locationX>
        <locationY>947</locationY>
        <defaultConnector>
            <targetReference>Warning_assignment_for_priority_VH</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>If_Yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.ITSC_Task__r.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Task_Record</targetReference>
            </connector>
            <label>If Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_For_Task_is_Present1</name>
        <label>Check For Task is Present</label>
        <locationX>1942</locationX>
        <locationY>947</locationY>
        <defaultConnector>
            <targetReference>Warning_assignment_for_priority_High</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>If_Yes0</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.ITSC_Task__r.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Task_Record1</targetReference>
            </connector>
            <label>If Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_for_Task_Owner</name>
        <label>Check for Task Owner</label>
        <locationX>402</locationX>
        <locationY>1271</locationY>
        <defaultConnector>
            <targetReference>Loop_To_Get_Task_Owner</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>If_same_owner</name>
            <conditionLogic>NOT(1)</conditionLogic>
            <conditions>
                <leftValueReference>ToGetOwner</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>Loop_To_Get_Task_Owner.OwnerId</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assignment_for_Task</targetReference>
            </connector>
            <label>If same owner</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_for_Task_Owner1</name>
        <label>Check for Task Owner</label>
        <locationX>2030</locationX>
        <locationY>1271</locationY>
        <defaultConnector>
            <targetReference>Loop_To_Get_Task_Owner1</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>If_same_owner1</name>
            <conditionLogic>NOT(1)</conditionLogic>
            <conditions>
                <leftValueReference>ToGetOwner</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <elementReference>Loop_To_Get_Task_Owner1.OwnerId</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assignment_for_Task1</targetReference>
            </connector>
            <label>If same owner</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_Group_Present</name>
        <label>Check Group Present</label>
        <locationX>886</locationX>
        <locationY>755</locationY>
        <defaultConnector>
            <targetReference>Check_is_CIO_present</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Is_Present</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>Get_group_of_IT_Leadership</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Violation_Assignment_for_priority_VH</targetReference>
            </connector>
            <label>Is Present</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_if_Group_Present</name>
        <label>Check if Group Present</label>
        <locationX>2514</locationX>
        <locationY>647</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Is_Present0</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_IT_Leadership_Group</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Violation_Assignment_for_priority_high</targetReference>
            </connector>
            <label>Is Present</label>
        </rules>
    </decisions>
    <decisions>
        <description>From this decision will change logic once CIO  role/title define</description>
        <name>Check_is_CIO_present</name>
        <label>Check is CIO present</label>
        <locationX>886</locationX>
        <locationY>1055</locationY>
        <defaultConnector>
            <targetReference>Violation_Inapp_for_Very_High_Priority</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_User_Record.Id</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>005DN000000QGnMYAW</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_value_to_CIO</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Decision_to_check_Priority</name>
        <label>Decision to check Priority</label>
        <locationX>4340</locationX>
        <locationY>323</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Is_Priority_Very_High</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Priority</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Very High</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Incident</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Warning_Violation_For_Very_High</targetReference>
            </connector>
            <label>Is Priority Very High</label>
        </rules>
        <rules>
            <name>Is_Priority_High</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Priority</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>High</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Incident</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Warning_Violation_For_High</targetReference>
            </connector>
            <label>Is Priority High</label>
        </rules>
        <rules>
            <name>Is_Priority_Medium</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Priority</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Medium</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Incident</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Warning_Violation_For_Medium</targetReference>
            </connector>
            <label>Is Priority Medium</label>
        </rules>
        <rules>
            <name>Is_Priority_Low</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Priority</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Low</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Incident</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Warning_Violation_For_Medium00</targetReference>
            </connector>
            <label>Is Priority Low</label>
        </rules>
        <rules>
            <name>For_Service_Request</name>
            <conditionLogic>(1 OR 2 OR 3 OR 4 ) AND 5</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Priority</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Very High</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Priority</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>High</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Priority</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Medium</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Priority</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Low</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Request</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check_for_Service_Request</targetReference>
            </connector>
            <label>For Service Request</label>
        </rules>
    </decisions>
    <decisions>
        <name>Queue_Manager_for_High_Priority</name>
        <label>Queue Manager for High Priority</label>
        <locationX>1942</locationX>
        <locationY>539</locationY>
        <defaultConnector>
            <targetReference>Check_For_Task_is_Present1</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>If_owner_is_Queue_If_1_hr1</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Owner:Group.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Queue_Manager_for_high_Priority_warning</targetReference>
            </connector>
            <label>If owner is Queue If 1 hr</label>
        </rules>
        <rules>
            <name>If_Owner_is_User_and_1_hr_Left1</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Owner:User.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.wkitsm__PreviousQueue__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record.Owner:Group.Id</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Queue_manager_for_user_for_high_priority</targetReference>
            </connector>
            <label>If Owner is User and 1 hr Left</label>
        </rules>
    </decisions>
    <decisions>
        <name>Queue_Manager_for_Very_High_Priority</name>
        <label>Queue Manager for Very High Priority</label>
        <locationX>314</locationX>
        <locationY>539</locationY>
        <defaultConnector>
            <targetReference>Check_For_Task_is_Present</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>If_owner_is_Queue_If_1_hr</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Innova_Warning_Time__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>3rd Warning</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Owner:Group.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Queue_Manager1</targetReference>
            </connector>
            <label>If owner is Queue If 1 hr</label>
        </rules>
        <rules>
            <name>If_Owner_is_User_and_1_hr_Left</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Innova_Warning_Time__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>3rd Warning</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Owner:User.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.wkitsm__PreviousQueue__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record__Prior.Owner:Group.Id</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Queue_manager_for_user_for_Very_high_priority</targetReference>
            </connector>
            <label>If Owner is User and 1 hr Left</label>
        </rules>
    </decisions>
    <decisions>
        <name>Task_is_Present</name>
        <label>Task is Present</label>
        <locationX>314</locationX>
        <locationY>1955</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>If_Yes1</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>ToGetOwner</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Notify_Task_owner</targetReference>
            </connector>
            <label>If Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>To_check_for_Task</name>
        <label>To check for Task</label>
        <locationX>1942</locationX>
        <locationY>1955</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>If_Task_is_Present</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.ITSC_Task__r.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>ToGetOwner</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Notify_Task_owner1</targetReference>
            </connector>
            <label>If Task is Present</label>
        </rules>
    </decisions>
    <decisions>
        <name>Warning_Violation_For_High</name>
        <label>Warning/Violation For High</label>
        <locationX>2426</locationX>
        <locationY>431</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Warning0</name>
            <conditionLogic>(1 OR 2 OR 3 ) AND 4</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Innova_Warning_Time__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>1st Warning</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Innova_Warning_Time__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>2nd Warning</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Innova_Warning_Time__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>3rd Warning</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Innova_Warning_Time__c</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Queue_Manager_for_High_Priority</targetReference>
            </connector>
            <label>Warning</label>
        </rules>
        <rules>
            <name>Violation0</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Innova_Resolution_Violated__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_IT_Leadership_Group</targetReference>
            </connector>
            <label>Violation</label>
        </rules>
    </decisions>
    <decisions>
        <name>Warning_Violation_For_Medium</name>
        <label>Warning/Violation For Medium</label>
        <locationX>3658</locationX>
        <locationY>431</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Warning00</name>
            <conditionLogic>(1 OR 2 OR 3 ) AND 4</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Innova_Warning_Time__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>1st Warning</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Innova_Warning_Time__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>2nd Warning</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Innova_Warning_Time__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>3rd Warning</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Innova_Warning_Time__c</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Warning_assignment_for_priority_Medium</targetReference>
            </connector>
            <label>Warning</label>
        </rules>
        <rules>
            <name>Violation00</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Innova_Resolution_Violated__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check_for_Previous_Queue</targetReference>
            </connector>
            <label>Violation</label>
        </rules>
    </decisions>
    <decisions>
        <name>Warning_Violation_For_Medium00</name>
        <label>Warning/Violation For Medium</label>
        <locationX>4890</locationX>
        <locationY>431</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Warning1</name>
            <conditionLogic>(1 OR 2 OR 3 ) AND 4</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Innova_Warning_Time__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>1st Warning</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Innova_Warning_Time__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>2nd Warning</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Innova_Warning_Time__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>3rd Warning</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Innova_Warning_Time__c</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Warning_assignment_for_priority_Low</targetReference>
            </connector>
            <label>Warning</label>
        </rules>
        <rules>
            <name>Violation1</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Innova_Resolution_Violated__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check_for_Previous_Queue1</targetReference>
            </connector>
            <label>Violation</label>
        </rules>
    </decisions>
    <decisions>
        <name>Warning_Violation_For_Service_Request</name>
        <label>Warning/Violation For Service Request</label>
        <locationX>6650</locationX>
        <locationY>539</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>X2nd_Warning</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Innova_Warning_Time__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>2nd Warning</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Innova_Warning_Time__c</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check_for_owner</targetReference>
            </connector>
            <label>2nd Warning</label>
        </rules>
        <rules>
            <name>X1st_Warning</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Innova_Warning_Time__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>1st Warning</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Innova_Warning_Time__c</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Warning_Assignment_for_1st_warning_for_service_request_as_owner_is_Queue</targetReference>
            </connector>
            <label>1st Warning</label>
        </rules>
        <rules>
            <name>Violation11</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Innova_Resolution_Violated__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check_for_Owner11</targetReference>
            </connector>
            <label>Violation</label>
        </rules>
    </decisions>
    <decisions>
        <name>Warning_Violation_For_Very_High</name>
        <label>Warning/Violation For Very High</label>
        <locationX>754</locationX>
        <locationY>431</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Warning</name>
            <conditionLogic>(1 OR 2 OR 3) AND 4</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Innova_Warning_Time__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>1st Warning</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Innova_Warning_Time__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>2nd Warning</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Innova_Warning_Time__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>3rd Warning</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Innova_Warning_Time__c</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Queue_Manager_for_Very_High_Priority</targetReference>
            </connector>
            <label>Warning</label>
        </rules>
        <rules>
            <name>Violation</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Innova_Resolution_Violated__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_group_of_IT_Leadership</targetReference>
            </connector>
            <label>Violation</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <interviewLabel>Innova-Inapp Notification of Entitlement Warning/Violation {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Innova-Inapp Notification of Entitlement Warning/Violation</label>
    <loops>
        <description>Loop To Get Each Task Owner</description>
        <name>Loop_To_Get_Task_Owner</name>
        <label>Loop To Get Task Owner</label>
        <locationX>182</locationX>
        <locationY>1163</locationY>
        <collectionReference>Get_Task_Record</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Check_for_Task_Owner</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Warning_assignment_for_priority_VH</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <name>Loop_To_Get_Task_Owner1</name>
        <label>Loop To Get Task Owner</label>
        <locationX>1810</locationX>
        <locationY>1163</locationY>
        <collectionReference>Get_Task_Record1</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Check_for_Task_Owner1</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Warning_assignment_for_priority_High</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_group_of_IT_Leadership</name>
        <label>Get group of IT Leadership</label>
        <locationX>886</locationX>
        <locationY>539</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_User_Record</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Innova_IT_Leadership_team</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_IT_Leadership_Group</name>
        <label>Get IT Leadership Group</label>
        <locationX>2514</locationX>
        <locationY>539</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_if_Group_Present</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Innova_IT_Leadership_team</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Queue_Manager1</name>
        <label>Get Queue Manager</label>
        <locationX>50</locationX>
        <locationY>647</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Warning_assignment_for_priority_VH_as_owner_is_queue</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Queue_Name__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Owner:Group.Name</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Innova_Queue_Owner__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Queue_Manager_for_high_Priority_warning</name>
        <label>Get Queue Manager for high Priority warning</label>
        <locationX>1678</locationX>
        <locationY>647</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Warning_assignment_for_priority_high_as_owner_is_queue</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Queue_Name__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Owner:Group.Name</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Innova_Queue_Owner__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Queue_Manager_for_Low_priority_for_Queue_violation</name>
        <label>Get Queue Manager for Low priority for Queue -violation</label>
        <locationX>4670</locationX>
        <locationY>647</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Violation_assignment_for_Priority_Low_as_owner_is_Queue</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Queue_Name__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Owner:Group.Name</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Innova_Queue_Owner__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Queue_Manager_for_medium_priority_for_Queue_violation</name>
        <label>Get Queue Manager for medium priority for Queue -violation</label>
        <locationX>3438</locationX>
        <locationY>647</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Violation_assignment_for_priority_Medium_as_owner_is_queue</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Queue_Name__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Owner:Group.Name</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Innova_Queue_Owner__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Queue_manager_for_Service_Request</name>
        <label>Get Queue manager for Service Request</label>
        <locationX>5902</locationX>
        <locationY>755</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Warning_assignment_for_service_Request</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Queue_Name__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.wkitsm__PreviousQueue__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Innova_Queue_Owner__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Queue_Manager_for_service_request_for_2nd_warning</name>
        <label>Get Queue Manager for service request for  2nd warning</label>
        <locationX>5638</locationX>
        <locationY>755</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Warning_assignment_fo_service_request_as_owner_is_Queue</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Queue_Name__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Owner:Group.Name</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Innova_Queue_Owner__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Queue_Manager_for_service_request_for_Violation</name>
        <label>Get Queue Manager for service request for Violation</label>
        <locationX>6694</locationX>
        <locationY>755</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Violation_Assignment_for_service_request_as_owner_is_Queue</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Queue_Name__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Owner:Group.Name</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Innova_Queue_Owner__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Queue_manager_for_Service_Request_Violation_owner_is_user</name>
        <label>Get Queue manager for Service Request Violation owner is user</label>
        <locationX>6958</locationX>
        <locationY>755</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assignment_for_service_Request_Violation</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Queue_Name__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.wkitsm__PreviousQueue__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Innova_Queue_Owner__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Queue_manager_for_user_for_high_priority</name>
        <label>Get Queue manager for user for high priority</label>
        <locationX>1942</locationX>
        <locationY>647</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Warning_assignment_for_priority_high_as_owner_is_user</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Queue_Name__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.wkitsm__PreviousQueue__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Innova_Queue_Owner__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Queue_manager_for_user_for_Low_priority_violation</name>
        <label>Get Queue manager for user for Low priority violation</label>
        <locationX>4934</locationX>
        <locationY>647</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Violation_assignment_for_priority_Low_as_owner_is_user</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Queue_Name__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.wkitsm__PreviousQueue__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Innova_Queue_Owner__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Queue_manager_for_user_for_medium_priority_violation</name>
        <label>Get Queue manager for user for medium priority violation</label>
        <locationX>3702</locationX>
        <locationY>647</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Violation_assignment_for_priority_medium_as_owner_is_user</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Queue_Name__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.wkitsm__PreviousQueue__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Innova_Queue_Owner__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Queue_manager_for_user_for_Very_high_priority</name>
        <label>Get Queue manager for user for Very high priority</label>
        <locationX>314</locationX>
        <locationY>647</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Warning_assignment_for_priority_very_high_as_owner_is_user</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Queue_Name__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.wkitsm__PreviousQueue__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Innova_Queue_Owner__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Task_Record</name>
        <label>Get Task Record</label>
        <locationX>182</locationX>
        <locationY>1055</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Loop_To_Get_Task_Owner</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Innova_Related_Case__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>OwnerId</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Innova_ITSC_Task__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Task_Record1</name>
        <label>Get Task Record</label>
        <locationX>1810</locationX>
        <locationY>1055</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Loop_To_Get_Task_Owner1</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Innova_Related_Case__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>OwnerId</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Innova_ITSC_Task__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Testing Purpose taken Shrikant&apos;s as CIO So taking His user id from custom label(once CIO decide will change this)</description>
        <name>Get_User_Record</name>
        <label>Get User Record</label>
        <locationX>886</locationX>
        <locationY>647</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_Group_Present</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>005DN000000QGnMYAW</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>4214</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Decision_to_check_Priority</targetReference>
        </connector>
        <object>Case</object>
        <recordTriggerType>Update</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Draft</status>
    <variables>
        <name>ToGetOwner</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varTaskWarning</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varViolation</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varWarning</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
