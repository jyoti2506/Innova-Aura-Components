<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>closed1</name>
        <label>closed</label>
        <locationX>3086</locationX>
        <locationY>755</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <connector>
            <targetReference>Check_requested_by_and_on_behalf_of3</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>$Label.Innova_Custom_Notification_TypeId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>varUserId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <stringValue>Incident has been closed.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <stringValue>Incident {!$Record.CaseNumber} has been closed.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>customNotificationAction</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Notification_for_closed</name>
        <label>Notification for closed</label>
        <locationX>3482</locationX>
        <locationY>647</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>$Label.Innova_Custom_Notification_TypeId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>ContactId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <stringValue>Incident has been closed.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <stringValue>Incident {!$Record.CaseNumber} has been closed.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>customNotificationAction</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Notification_for_contact</name>
        <label>Notification for contact</label>
        <locationX>292</locationX>
        <locationY>755</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <connector>
            <targetReference>Check_requested_by_and_on_behalf_of</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>$Label.Innova_Custom_Notification_TypeId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>varUserId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <stringValue>New Incident has been created.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <stringValue>New Incident {!$Record.CaseNumber} has been created.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>customNotificationAction</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Notification_for_New</name>
        <label>Notification for New</label>
        <locationX>600</locationX>
        <locationY>647</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <connector>
            <targetReference>If_User_and_Queue1</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>$Label.Innova_Custom_Notification_TypeId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>ContactId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <stringValue>New Incident has been created.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <stringValue>New Incident {!$Record.CaseNumber} has been created.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>customNotificationAction</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Notification_for_queue</name>
        <label>Notification for queue</label>
        <locationX>1370</locationX>
        <locationY>863</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>$Label.Innova_Custom_Notification_TypeId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>QueueId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <stringValue>New Incident has been assigned to you.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <stringValue>New Incident {!$Record.CaseNumber} has been assigned to you.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>customNotificationAction</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Notification_for_queue1</name>
        <label>Notification for queue</label>
        <locationX>314</locationX>
        <locationY>1787</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>$Label.Innova_Custom_Notification_TypeId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>QueueId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <stringValue>New Incident has been assigned to you.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <stringValue>New Incident {!$Record.CaseNumber} has been assigned to you.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>customNotificationAction</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Notification_for_Requested_by</name>
        <label>Notification for Requested by</label>
        <locationX>160</locationX>
        <locationY>1079</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <connector>
            <targetReference>If_User_and_Queue1</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>$Label.Innova_Custom_Notification_TypeId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>Requestedby</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <stringValue>New Incident has been created.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <stringValue>New Incident {!$Record.CaseNumber} has been created.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>customNotificationAction</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Notification_for_Requested_by1</name>
        <label>Notification for Requested by</label>
        <locationX>2162</locationX>
        <locationY>1079</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>$Label.Innova_Custom_Notification_TypeId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>Requestedby</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <stringValue>Incident has been resolved.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <stringValue>Incident {!$Record.CaseNumber} has been resolved.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>customNotificationAction</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Notification_for_Requested_by2</name>
        <label>Notification for Requested by</label>
        <locationX>2954</locationX>
        <locationY>1079</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>$Label.Innova_Custom_Notification_TypeId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>Requestedby</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <stringValue>Incident has been closed.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <stringValue>Incident {!$Record.CaseNumber} has been closed.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>customNotificationAction</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Notification_for_resolved</name>
        <label>Notification for resolved</label>
        <locationX>2690</locationX>
        <locationY>647</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>$Label.Innova_Custom_Notification_TypeId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>ContactId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <stringValue>Incident has been resolved.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <stringValue>Incident {!$Record.CaseNumber} has been resolved.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>customNotificationAction</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Notification_for_user</name>
        <label>Notification for user</label>
        <locationX>1106</locationX>
        <locationY>647</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>$Label.Innova_Custom_Notification_TypeId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>OwnerId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <stringValue>New Incident has been assigned to you.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <stringValue>New Incident {!$Record.CaseNumber} has been assigned to you.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>customNotificationAction</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Notification_for_user1</name>
        <label>Notification for user</label>
        <locationX>50</locationX>
        <locationY>1571</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>$Label.Innova_Custom_Notification_TypeId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>OwnerId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <stringValue>New Incident has been assigned to you.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <stringValue>New Incident {!$Record.CaseNumber} has been assigned to you.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>customNotificationAction</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>resolved1</name>
        <label>resolved</label>
        <locationX>2294</locationX>
        <locationY>755</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <connector>
            <targetReference>Check_requested_by_and_on_behalf_of1</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>$Label.Innova_Custom_Notification_TypeId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>varUserId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <stringValue>Incident has been resolved.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <stringValue>Incident {!$Record.CaseNumber} has been resolved.</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>customNotificationAction</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <apiVersion>57.0</apiVersion>
    <assignments>
        <name>Assignment</name>
        <label>Assignment</label>
        <locationX>292</locationX>
        <locationY>647</locationY>
        <assignmentItems>
            <assignToReference>varUserId</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>GetUserId.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Notification_for_contact</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Ids_Assign</name>
        <label>Ids Assign</label>
        <locationX>2294</locationX>
        <locationY>647</locationY>
        <assignmentItems>
            <assignToReference>varUserId</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>UserId.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>resolved1</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Ids_Assign2</name>
        <label>Ids Assign2</label>
        <locationX>3086</locationX>
        <locationY>647</locationY>
        <assignmentItems>
            <assignToReference>varUserId</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Getuser.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>closed1</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Ids_Assignment</name>
        <label>Ids Assignment</label>
        <locationX>600</locationX>
        <locationY>539</locationY>
        <assignmentItems>
            <assignToReference>ContactId</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>$Record.CreatedBy.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Notification_for_New</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Ids_Assignment1</name>
        <label>Ids Assignment1</label>
        <locationX>2690</locationX>
        <locationY>539</locationY>
        <assignmentItems>
            <assignToReference>ContactId</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>$Record.CreatedBy.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Notification_for_resolved</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Ids_Assignment2</name>
        <label>Ids Assignment2</label>
        <locationX>3482</locationX>
        <locationY>539</locationY>
        <assignmentItems>
            <assignToReference>ContactId</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>$Record.CreatedBy.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Notification_for_closed</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>QueueId_assignment</name>
        <label>QueueId assignment</label>
        <locationX>1370</locationX>
        <locationY>755</locationY>
        <assignmentItems>
            <assignToReference>QueueId</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Notification_for_queue</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>QueueId_assignment1</name>
        <label>QueueId assignment</label>
        <locationX>314</locationX>
        <locationY>1679</locationY>
        <assignmentItems>
            <assignToReference>QueueId</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Notification_for_queue1</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Requested_by_Assignment</name>
        <label>Requested by Assignment</label>
        <locationX>160</locationX>
        <locationY>971</locationY>
        <assignmentItems>
            <assignToReference>Requestedby</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>$Record.CreatedBy.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Notification_for_Requested_by</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Requested_by_Assignment1</name>
        <label>Requested by Assignment</label>
        <locationX>2162</locationX>
        <locationY>971</locationY>
        <assignmentItems>
            <assignToReference>Requestedby</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>$Record.CreatedBy.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Notification_for_Requested_by1</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Requested_by_Assignment2</name>
        <label>Requested by Assignment</label>
        <locationX>2954</locationX>
        <locationY>971</locationY>
        <assignmentItems>
            <assignToReference>Requestedby</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>$Record.CreatedBy.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Notification_for_Requested_by2</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>UserId_Assignment</name>
        <label>UserId Assignment</label>
        <locationX>1106</locationX>
        <locationY>539</locationY>
        <assignmentItems>
            <assignToReference>OwnerId</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>$Record.Owner:User.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Notification_for_user</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>UserId_Assignment1</name>
        <label>UserId Assignment</label>
        <locationX>50</locationX>
        <locationY>1463</locationY>
        <assignmentItems>
            <assignToReference>OwnerId</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>$Record.Owner:User.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Notification_for_user1</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Check</name>
        <label>Check</label>
        <locationX>2492</locationX>
        <locationY>431</locationY>
        <defaultConnector>
            <targetReference>Ids_Assignment1</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>On_behalf_of1</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Innova_On_Behalf_Of__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>UserId</targetReference>
            </connector>
            <label>On behalf of</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check1</name>
        <label>Check</label>
        <locationX>3284</locationX>
        <locationY>431</locationY>
        <defaultConnector>
            <targetReference>Ids_Assignment2</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>On_behalf_Of2</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Innova_On_Behalf_Of__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Getuser</targetReference>
            </connector>
            <label>On behalf Of</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_Id</name>
        <label>Check Id</label>
        <locationX>1502</locationX>
        <locationY>647</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Queue_Id.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>QueueId_assignment</targetReference>
            </connector>
            <label>yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_Id1</name>
        <label>Check Id</label>
        <locationX>446</locationX>
        <locationY>1571</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>yes1</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Queue_Id1.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>QueueId_assignment1</targetReference>
            </connector>
            <label>yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_on_behalf_of</name>
        <label>Check on behalf of</label>
        <locationX>446</locationX>
        <locationY>431</locationY>
        <defaultConnector>
            <targetReference>Ids_Assignment</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>True</defaultConnectorLabel>
        <rules>
            <name>On_behalf_Of</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Innova_On_Behalf_Of__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetUserId</targetReference>
            </connector>
            <label>On behalf Of</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_requested_by_and_on_behalf_of</name>
        <label>Check requested by and on behalf of</label>
        <locationX>292</locationX>
        <locationY>863</locationY>
        <defaultConnector>
            <targetReference>If_User_and_Queue1</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes2</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetUserId.Id</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record.CreatedBy.Id</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Requested_by_Assignment</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_requested_by_and_on_behalf_of1</name>
        <label>Check requested by and on behalf of</label>
        <locationX>2294</locationX>
        <locationY>863</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes3</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>UserId.Id</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record.CreatedBy.Id</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Requested_by_Assignment1</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_requested_by_and_on_behalf_of3</name>
        <label>Check requested by and on behalf of</label>
        <locationX>3086</locationX>
        <locationY>863</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes4</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Getuser.Id</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record.CreatedBy.Id</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Requested_by_Assignment2</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_status</name>
        <label>Check status</label>
        <locationX>2096</locationX>
        <locationY>323</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>New</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>New</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>IsNew</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check_on_behalf_of</targetReference>
            </connector>
            <label>New</label>
        </rules>
        <rules>
            <name>Assigned</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.OwnerId</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>If_User_and_Queue</targetReference>
            </connector>
            <label>Assigned</label>
        </rules>
        <rules>
            <name>Resolved</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Resolved</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check</targetReference>
            </connector>
            <label>Resolved</label>
        </rules>
        <rules>
            <name>Closed</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Closed</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check1</targetReference>
            </connector>
            <label>Closed</label>
        </rules>
    </decisions>
    <decisions>
        <name>If_User_and_Queue</name>
        <label>If User and Queue</label>
        <locationX>1502</locationX>
        <locationY>431</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>User</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Owner:User.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.OwnerId</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>UserId_Assignment</targetReference>
            </connector>
            <label>User</label>
        </rules>
        <rules>
            <name>Queue</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Owner:Group.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.OwnerId</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Queue_Id</targetReference>
            </connector>
            <label>Queue</label>
        </rules>
    </decisions>
    <decisions>
        <name>If_User_and_Queue1</name>
        <label>If User and Queue1</label>
        <locationX>446</locationX>
        <locationY>1355</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>User1</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Owner:User.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>UserId_Assignment1</targetReference>
            </connector>
            <label>User1</label>
        </rules>
        <rules>
            <name>Queue1</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Owner:Group.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Queue_Id1</targetReference>
            </connector>
            <label>Queue1</label>
        </rules>
    </decisions>
    <description>In app notification for Incident process</description>
    <environments>Default</environments>
    <formulas>
        <name>IsNew</name>
        <dataType>Boolean</dataType>
        <expression>IsNew()</expression>
    </formulas>
    <interviewLabel>Innova-In app notification for Incident process {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Innova-In app notification for Incident process</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Queue_Id</name>
        <label>Get Queue Id</label>
        <locationX>1502</locationX>
        <locationY>539</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_Id</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>GroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Owner:Group.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>GroupMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Queue_Id1</name>
        <label>Get Queue Id</label>
        <locationX>446</locationX>
        <locationY>1463</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_Id1</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>GroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Owner:Group.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>GroupMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Getuser</name>
        <label>Get user</label>
        <locationX>3086</locationX>
        <locationY>539</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Ids_Assign2</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Email</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Innova_On_Behalf_Of__r.Email</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetUserId</name>
        <label>GetUserId</label>
        <locationX>292</locationX>
        <locationY>539</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assignment</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Email</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Innova_On_Behalf_Of__r.Email</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>UserId</name>
        <label>UserId</label>
        <locationX>2294</locationX>
        <locationY>539</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Ids_Assign</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Email</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Innova_On_Behalf_Of__r.Email</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>1970</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Check_status</targetReference>
        </connector>
        <filterFormula>{!$Record.RecordType.DeveloperName}= &apos;Incident&apos;</filterFormula>
        <object>Case</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Obsolete</status>
    <variables>
        <name>ContactId</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>OwnerId</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>QueueId</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>Requestedby</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varUserId</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
